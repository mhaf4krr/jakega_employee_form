{"ast":null,"code":"var _jsxFileName = \"/home/hyder/Desktop/jakega_employee_form/client/src/components/Educational_Info/EducationInfo.js\";\nimport React, { Component } from \"react\";\nimport styles from \"./Educational.module.css\";\nimport Modal from \"../../utils/Modal/Modal\";\nimport { Header, Form, Button } from \"semantic-ui-react\";\nimport Table from \"./EducationalTable/Table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class EducationInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modalOpen: false,\n      counter: 0,\n      educational_qualifications: [],\n      education: {\n        institution: \"\",\n        address: \"\",\n        date_of_entering: \"\",\n        date_of_leaving: \"\",\n        examination_passed: \"\"\n      }\n    };\n\n    this.validated = () => {\n      let validated = true;\n      let education_data = this.state.education;\n      let fields = Object.keys(education_data);\n\n      for (let i = 0; i < fields.length; i++) {\n        if (education_data[fields[i]] === \"\") {\n          validated = false;\n          break;\n        }\n      }\n\n      return validated;\n    };\n\n    this.clearExistingForm = () => {\n      let current_educational_form = { ...this.state.education\n      };\n      let fields = Object.keys(current_educational_form);\n      fields.forEach(field => {\n        current_educational_form[field] = \"\";\n      });\n      this.setState({\n        education: current_educational_form\n      });\n    };\n\n    this.storeCurrentInArray = () => {\n      let counter = this.state.counter;\n      let current_educational_form = { ...this.state.education,\n        id: counter\n      };\n      console.log(current_educational_form, \"current_ed_form\");\n      let educational_qualifications_data = [...this.state.educational_qualifications, current_educational_form];\n      this.setState({\n        educational_qualifications: educational_qualifications_data,\n        counter: counter + 1,\n        modalOpen: false\n      });\n    };\n\n    this.handleFormFill = (id, value) => {\n      let education_data = { ...this.state.education\n      };\n      education_data[id] = value;\n      this.setState({\n        education: education_data\n      });\n    };\n\n    this.changeModal = state => {\n      let modal = state === \"open\" ? true : false;\n      this.setState({\n        modalOpen: modal\n      });\n    };\n  }\n\n  render() {\n    let {\n      incrementStep,\n      decrementStep,\n      handleArrayFill\n    } = { ...this.props\n    };\n    let form = this.state.education;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"main_wrapper\"],\n        children: [/*#__PURE__*/_jsxDEV(Modal, {\n          modalState: this.state.modalOpen,\n          modalMessage: \"Add new Educational Qualification\",\n          closeModal: () => this.changeModal(\"close\"),\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              widths: \"equal\",\n              children: /*#__PURE__*/_jsxDEV(Form.Field, {\n                control: Form.Input,\n                label: \"Name of Institution [school / college / university]\",\n                name: \"name_of_institution\",\n                required: true,\n                onChange: e => {\n                  this.handleFormFill(\"institution\", e.target.value);\n                },\n                value: form[\"institution\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              widths: \"equal\",\n              children: /*#__PURE__*/_jsxDEV(Form.Field, {\n                control: Form.Input,\n                label: \"Full Address of Institution [school / college / university]\",\n                name: \"address_of_institution\",\n                required: true,\n                onChange: e => {\n                  this.handleFormFill(\"address\", e.target.value);\n                },\n                value: form[\"address\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              widths: \"equal\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n                type: \"date\",\n                label: \"Date of Joining Institution\",\n                required: true,\n                onChange: e => this.handleFormFill(\"date_of_entering\", e.target.value),\n                value: form[\"date_of_entering\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n                type: \"date\",\n                label: \"Date of Leaving Institution\",\n                required: true,\n                onChange: e => this.handleFormFill(\"date_of_leaving\", e.target.value),\n                value: form[\"date_of_leaving\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              widths: \"equal\",\n              children: /*#__PURE__*/_jsxDEV(Form.Field, {\n                control: Form.Input,\n                label: \"Examination Passed\",\n                name: \"examination_passed\",\n                required: true,\n                onChange: e => {\n                  this.handleFormFill(\"examination_passed\", e.target.value);\n                },\n                value: form[\"examination_passed\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                positive: true,\n                onClick: e => {\n                  if (this.validated()) {\n                    this.storeCurrentInArray();\n                    this.clearExistingForm();\n                  }\n                },\n                children: \"Add Detail to List\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Header, {\n          as: \"h2\",\n          children: \"5. Educational Qualifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please fill up the details showing places of education with years in school, colleges and universities since the age of 15 years.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          positive: true,\n          onClick: e => {\n            this.setState({\n              modalOpen: true\n            });\n          },\n          children: \"Add Educational Detail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        data: this.state.educational_qualifications\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/hyder/Desktop/jakega_employee_form/client/src/components/Educational_Info/EducationInfo.js"],"names":["React","Component","styles","Modal","Header","Form","Button","Table","EducationInfo","state","modalOpen","counter","educational_qualifications","education","institution","address","date_of_entering","date_of_leaving","examination_passed","validated","education_data","fields","Object","keys","i","length","clearExistingForm","current_educational_form","forEach","field","setState","storeCurrentInArray","id","console","log","educational_qualifications_data","handleFormFill","value","changeModal","modal","render","incrementStep","decrementStep","handleArrayFill","props","form","Input","e","target"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport styles from \"./Educational.module.css\";\n\nimport Modal from \"../../utils/Modal/Modal\";\n\nimport { Header, Form, Button } from \"semantic-ui-react\";\n\nimport Table from \"./EducationalTable/Table\";\n\nexport default class EducationInfo extends Component {\n  state = {\n    modalOpen: false,\n    counter: 0,\n    educational_qualifications: [],\n    education: {\n      institution: \"\",\n      address: \"\",\n      date_of_entering: \"\",\n      date_of_leaving: \"\",\n      examination_passed: \"\",\n    },\n  };\n\n  validated = () => {\n    let validated = true;\n\n    let education_data = this.state.education;\n\n    let fields = Object.keys(education_data);\n\n    for (let i = 0; i < fields.length; i++) {\n      if (education_data[fields[i]] === \"\") {\n        validated = false;\n        break;\n      }\n    }\n\n    return validated;\n  };\n\n  clearExistingForm = () => {\n    let current_educational_form = { ...this.state.education };\n    let fields = Object.keys(current_educational_form);\n    fields.forEach((field) => {\n      current_educational_form[field] = \"\";\n    });\n    this.setState({\n      education: current_educational_form,\n    });\n  };\n\n  storeCurrentInArray = () => {\n    let counter = this.state.counter;\n    let current_educational_form = { ...this.state.education, id: counter };\n    console.log(current_educational_form, \"current_ed_form\");\n\n    let educational_qualifications_data = [\n      ...this.state.educational_qualifications,\n      current_educational_form,\n    ];\n\n    this.setState({\n      educational_qualifications: educational_qualifications_data,\n      counter: counter + 1,\n      modalOpen: false,\n    });\n  };\n\n  handleFormFill = (id, value) => {\n    let education_data = { ...this.state.education };\n    education_data[id] = value;\n\n    this.setState({ education: education_data });\n  };\n\n  changeModal = (state) => {\n    let modal = state === \"open\" ? true : false;\n    this.setState({ modalOpen: modal });\n  };\n  render() {\n    let { incrementStep, decrementStep, handleArrayFill } = {\n      ...this.props,\n    };\n\n    let form = this.state.education;\n\n    return (\n      <div className=\"container\">\n        <div className={styles[\"main_wrapper\"]}>\n          <Modal\n            modalState={this.state.modalOpen}\n            modalMessage=\"Add new Educational Qualification\"\n            closeModal={() => this.changeModal(\"close\")}\n          >\n            <Form>\n              <Form.Group widths=\"equal\">\n                <Form.Field\n                  control={Form.Input}\n                  label=\"Name of Institution [school / college / university]\"\n                  name=\"name_of_institution\"\n                  required\n                  onChange={(e) => {\n                    this.handleFormFill(\"institution\", e.target.value);\n                  }}\n                  value={form[\"institution\"]}\n                />\n              </Form.Group>\n\n              <Form.Group widths=\"equal\">\n                <Form.Field\n                  control={Form.Input}\n                  label=\"Full Address of Institution [school / college / university]\"\n                  name=\"address_of_institution\"\n                  required\n                  onChange={(e) => {\n                    this.handleFormFill(\"address\", e.target.value);\n                  }}\n                  value={form[\"address\"]}\n                />\n              </Form.Group>\n\n              <Form.Group widths=\"equal\">\n                <Form.Input\n                  type=\"date\"\n                  label=\"Date of Joining Institution\"\n                  required\n                  onChange={(e) =>\n                    this.handleFormFill(\"date_of_entering\", e.target.value)\n                  }\n                  value={form[\"date_of_entering\"]}\n                />\n\n                <Form.Input\n                  type=\"date\"\n                  label=\"Date of Leaving Institution\"\n                  required\n                  onChange={(e) =>\n                    this.handleFormFill(\"date_of_leaving\", e.target.value)\n                  }\n                  value={form[\"date_of_leaving\"]}\n                />\n              </Form.Group>\n\n              <Form.Group widths=\"equal\">\n                <Form.Field\n                  control={Form.Input}\n                  label=\"Examination Passed\"\n                  name=\"examination_passed\"\n                  required\n                  onChange={(e) => {\n                    this.handleFormFill(\"examination_passed\", e.target.value);\n                  }}\n                  value={form[\"examination_passed\"]}\n                />\n              </Form.Group>\n\n              <Form.Group>\n                <Button\n                  positive\n                  onClick={(e) => {\n                    if (this.validated()) {\n                      this.storeCurrentInArray();\n                      this.clearExistingForm();\n                    }\n                  }}\n                >\n                  Add Detail to List\n                </Button>\n              </Form.Group>\n            </Form>\n          </Modal>\n\n          <Header as=\"h2\">5. Educational Qualifications</Header>\n          <p>\n            Please fill up the details showing places of education with years in\n            school, colleges and universities since the age of 15 years.\n          </p>\n\n          <Button\n            positive\n            onClick={(e) => {\n              this.setState({\n                modalOpen: true,\n              });\n            }}\n          >\n            Add Educational Detail\n          </Button>\n        </div>\n        <Table data={this.state.educational_qualifications} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}