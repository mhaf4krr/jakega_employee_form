{"ast":null,"code":"var _jsxFileName = \"/home/hyder/Desktop/jakega_employee_form/client/src/components/Account_Numbers_information/AccountNumbers.js\";\nimport React, { Component } from \"react\";\nimport styles from \"./Educational.module.css\";\nimport Modal from \"../../utils/Modal/Modal\";\nimport { Header, Form, Button } from \"semantic-ui-react\";\nimport Table from \"./AccountTable/Table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class AccountNumberInformation extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modalOpen: false,\n      counter: 0,\n      account_numbers: [],\n      current_account_number: \"\"\n    };\n\n    this.validatedMainSubmission = () => {\n      let account_numbers = this.state.account_numbers;\n\n      if (account_numbers.length > 0) {\n        return true;\n      } else return false;\n    };\n\n    this.validated = () => {\n      if (this.state.current_account_number === \"\" || this.state.current_account_number.length < 5) {\n        return false;\n      } else return true;\n    };\n\n    this.clearExistingForm = () => {\n      this.setState({\n        current_account_number: \"\"\n      });\n    };\n\n    this.storeCurrentInArray = () => {\n      let account_numbers_data = [...this.state.account_numbers, this.state.current_account_number];\n      this.setState({\n        account_numbers: account_numbers_data\n      });\n    };\n\n    this.removeItemFormTable = value => {\n      let account_numbers_data = [...this.state.account_numbers];\n      console.log(value);\n      let new_account_numbers_data = account_numbers_data.filter(item => {\n        return item !== value;\n      });\n      this.setState({\n        account_numbers: new_account_numbers_data\n      });\n    };\n\n    this.handleLocalaccountFill = value => {\n      this.setState({\n        current_account_number: value\n      });\n    };\n\n    this.handleAddaccount = account_number => {\n      let local_account_numbers = [...this.state.account_numbers, account_number];\n      this.setState({\n        account_numbers: [...local_account_numbers]\n      });\n    };\n\n    this.changeModal = state => {\n      let modal = state === \"open\" ? true : false;\n      this.setState({\n        modalOpen: modal\n      });\n    };\n  }\n\n  componentDidMount() {\n    let account_numbers_data = this.props.form;\n    console.log(account_numbers_data); // If some previous information exists, just initialize state to that\n\n    if (account_numbers_data.length > 0) {\n      this.setState({\n        account_numbers: [...account_numbers_data]\n      });\n    }\n\n    return;\n  }\n\n  render() {\n    let {\n      incrementStep,\n      decrementStep,\n      handleArrayFill\n    } = { ...this.props\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"main_wrapper\"],\n        children: [/*#__PURE__*/_jsxDEV(Modal, {\n          modalState: this.state.modalOpen,\n          modalMessage: \"Add new account Number\",\n          closeModal: () => this.changeModal(\"close\"),\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              widths: \"equal\",\n              children: /*#__PURE__*/_jsxDEV(Form.Field, {\n                control: Form.Input,\n                label: \"account Number\",\n                name: \"account_number_local\",\n                required: true,\n                onChange: e => {\n                  this.handleLocalaccountFill(e.target.value);\n                },\n                value: this.state[\"current_account_number\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                positive: true,\n                onClick: e => {\n                  e.preventDefault();\n\n                  if (this.validated()) {\n                    this.storeCurrentInArray();\n                    this.setState({\n                      modalOpen: false\n                    });\n                    this.clearExistingForm();\n                  }\n                },\n                children: \"Add Number to List\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Header, {\n          as: \"h2\",\n          children: \"10. Account Numbers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please fill up the details of Bank/Post Office Account numbers.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          positive: true,\n          onClick: e => {\n            this.setState({\n              modalOpen: true\n            });\n          },\n          children: \"Add account Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        removeItemFormTable: this.removeItemFormTable,\n        data: this.state.account_numbers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"btn_wrapper\"],\n        children: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"medium\",\n            color: \"yellow\",\n            onClick: e => {\n              e.preventDefault();\n              decrementStep();\n            },\n            children: \"BACK: (9). LEGAL INFO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button.Or, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"medium\",\n            positive: true,\n            disabled: !this.validatedMainSubmission(),\n            onClick: e => {\n              e.preventDefault();\n\n              if (this.validatedMainSubmission()) {\n                handleArrayFill(\"account_numbers\", [...this.state.account_numbers]);\n              } else return false;\n            },\n            children: \"(11). POSTINGS INFO: NEXT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/hyder/Desktop/jakega_employee_form/client/src/components/Account_Numbers_information/AccountNumbers.js"],"names":["React","Component","styles","Modal","Header","Form","Button","Table","AccountNumberInformation","state","modalOpen","counter","account_numbers","current_account_number","validatedMainSubmission","length","validated","clearExistingForm","setState","storeCurrentInArray","account_numbers_data","removeItemFormTable","value","console","log","new_account_numbers_data","filter","item","handleLocalaccountFill","handleAddaccount","account_number","local_account_numbers","changeModal","modal","componentDidMount","props","form","render","incrementStep","decrementStep","handleArrayFill","Input","e","target","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,QAAqC,mBAArC;AAEA,OAAOC,KAAP,MAAkB,sBAAlB;;AAEA,eAAe,MAAMC,wBAAN,SAAuCP,SAAvC,CAAiD;AAAA;AAAA;AAAA,SAC9DQ,KAD8D,GACtD;AACNC,MAAAA,SAAS,EAAE,KADL;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,eAAe,EAAE,EAHX;AAINC,MAAAA,sBAAsB,EAAE;AAJlB,KADsD;;AAAA,SAqB9DC,uBArB8D,GAqBpC,MAAM;AAC9B,UAAIF,eAAe,GAAG,KAAKH,KAAL,CAAWG,eAAjC;;AACA,UAAIA,eAAe,CAACG,MAAhB,GAAyB,CAA7B,EAAgC;AAC9B,eAAO,IAAP;AACD,OAFD,MAEO,OAAO,KAAP;AACR,KA1B6D;;AAAA,SA4B9DC,SA5B8D,GA4BlD,MAAM;AAChB,UACE,KAAKP,KAAL,CAAWI,sBAAX,KAAsC,EAAtC,IACA,KAAKJ,KAAL,CAAWI,sBAAX,CAAkCE,MAAlC,GAA2C,CAF7C,EAGE;AACA,eAAO,KAAP;AACD,OALD,MAKO,OAAO,IAAP;AACR,KAnC6D;;AAAA,SAqC9DE,iBArC8D,GAqC1C,MAAM;AACxB,WAAKC,QAAL,CAAc;AACZL,QAAAA,sBAAsB,EAAE;AADZ,OAAd;AAGD,KAzC6D;;AAAA,SA2C9DM,mBA3C8D,GA2CxC,MAAM;AAC1B,UAAIC,oBAAoB,GAAG,CACzB,GAAG,KAAKX,KAAL,CAAWG,eADW,EAEzB,KAAKH,KAAL,CAAWI,sBAFc,CAA3B;AAIA,WAAKK,QAAL,CAAc;AACZN,QAAAA,eAAe,EAAEQ;AADL,OAAd;AAGD,KAnD6D;;AAAA,SAqD9DC,mBArD8D,GAqDvCC,KAAD,IAAW;AAC/B,UAAIF,oBAAoB,GAAG,CAAC,GAAG,KAAKX,KAAL,CAAWG,eAAf,CAA3B;AAEAW,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,UAAIG,wBAAwB,GAAGL,oBAAoB,CAACM,MAArB,CAA6BC,IAAD,IAAU;AACnE,eAAOA,IAAI,KAAKL,KAAhB;AACD,OAF8B,CAA/B;AAIA,WAAKJ,QAAL,CAAc;AACZN,QAAAA,eAAe,EAAEa;AADL,OAAd;AAGD,KAjE6D;;AAAA,SAmE9DG,sBAnE8D,GAmEpCN,KAAD,IAAW;AAClC,WAAKJ,QAAL,CAAc;AAAEL,QAAAA,sBAAsB,EAAES;AAA1B,OAAd;AACD,KArE6D;;AAAA,SAuE9DO,gBAvE8D,GAuE1CC,cAAD,IAAoB;AACrC,UAAIC,qBAAqB,GAAG,CAAC,GAAG,KAAKtB,KAAL,CAAWG,eAAf,EAAgCkB,cAAhC,CAA5B;AAEA,WAAKZ,QAAL,CAAc;AAAEN,QAAAA,eAAe,EAAE,CAAC,GAAGmB,qBAAJ;AAAnB,OAAd;AACD,KA3E6D;;AAAA,SA4E9DC,WA5E8D,GA4E/CvB,KAAD,IAAW;AACvB,UAAIwB,KAAK,GAAGxB,KAAK,KAAK,MAAV,GAAmB,IAAnB,GAA0B,KAAtC;AACA,WAAKS,QAAL,CAAc;AAAER,QAAAA,SAAS,EAAEuB;AAAb,OAAd;AACD,KA/E6D;AAAA;;AAQ9DC,EAAAA,iBAAiB,GAAG;AAClB,QAAId,oBAAoB,GAAG,KAAKe,KAAL,CAAWC,IAAtC;AAEAb,IAAAA,OAAO,CAACC,GAAR,CAAYJ,oBAAZ,EAHkB,CAIlB;;AAEA,QAAIA,oBAAoB,CAACL,MAArB,GAA8B,CAAlC,EAAqC;AACnC,WAAKG,QAAL,CAAc;AAAEN,QAAAA,eAAe,EAAE,CAAC,GAAGQ,oBAAJ;AAAnB,OAAd;AACD;;AAED;AACD;;AA6DDiB,EAAAA,MAAM,GAAG;AACP,QAAI;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA,aAAjB;AAAgCC,MAAAA;AAAhC,QAAoD,EACtD,GAAG,KAAKL;AAD8C,KAAxD;AAIA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEjC,MAAM,CAAC,cAAD,CAAtB;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,UAAU,EAAE,KAAKO,KAAL,CAAWC,SADzB;AAEE,UAAA,YAAY,EAAC,wBAFf;AAGE,UAAA,UAAU,EAAE,MAAM,KAAKsB,WAAL,CAAiB,OAAjB,CAHpB;AAAA,iCAKE,QAAC,IAAD;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,MAAM,EAAC,OAAnB;AAAA,qCACE,QAAC,IAAD,CAAM,KAAN;AACE,gBAAA,OAAO,EAAE3B,IAAI,CAACoC,KADhB;AAEE,gBAAA,KAAK,EAAC,gBAFR;AAGE,gBAAA,IAAI,EAAC,sBAHP;AAIE,gBAAA,QAAQ,MAJV;AAKE,gBAAA,QAAQ,EAAGC,CAAD,IAAO;AACf,uBAAKd,sBAAL,CAA4Bc,CAAC,CAACC,MAAF,CAASrB,KAArC;AACD,iBAPH;AAQE,gBAAA,KAAK,EAAE,KAAKb,KAAL,CAAW,wBAAX;AART;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAcE,QAAC,IAAD,CAAM,KAAN;AAAA,qCACE,QAAC,MAAD;AACE,gBAAA,QAAQ,MADV;AAEE,gBAAA,OAAO,EAAGiC,CAAD,IAAO;AACdA,kBAAAA,CAAC,CAACE,cAAF;;AACA,sBAAI,KAAK5B,SAAL,EAAJ,EAAsB;AACpB,yBAAKG,mBAAL;AACA,yBAAKD,QAAL,CAAc;AAAER,sBAAAA,SAAS,EAAE;AAAb,qBAAd;AACA,yBAAKO,iBAAL;AACD;AACF,iBATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,gBADF,eAsCE,QAAC,MAAD;AAAQ,UAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtCF,eAuCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvCF,eA2CE,QAAC,MAAD;AACE,UAAA,QAAQ,MADV;AAEE,UAAA,OAAO,EAAGyB,CAAD,IAAO;AACd,iBAAKxB,QAAL,CAAc;AACZR,cAAAA,SAAS,EAAE;AADC,aAAd;AAGD,WANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3CF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAuDE,QAAC,KAAD;AACE,QAAA,mBAAmB,EAAE,KAAKW,mBAD5B;AAEE,QAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWG;AAFnB;AAAA;AAAA;AAAA;AAAA,cAvDF,eA4DE;AAAK,QAAA,SAAS,EAAEV,MAAM,CAAC,aAAD,CAAtB;AAAA,+BACE,QAAC,MAAD,CAAQ,KAAR;AAAA,kCACE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,KAAK,EAAC,QAFR;AAGE,YAAA,OAAO,EAAGwC,CAAD,IAAO;AACdA,cAAAA,CAAC,CAACE,cAAF;AACAL,cAAAA,aAAa;AACd,aANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAWE,QAAC,MAAD,CAAQ,EAAR;AAAA;AAAA;AAAA;AAAA,kBAXF,eAYE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,QAAQ,MAFV;AAGE,YAAA,QAAQ,EAAE,CAAC,KAAKzB,uBAAL,EAHb;AAIE,YAAA,OAAO,EAAG4B,CAAD,IAAO;AACdA,cAAAA,CAAC,CAACE,cAAF;;AAEA,kBAAI,KAAK9B,uBAAL,EAAJ,EAAoC;AAClC0B,gBAAAA,eAAe,CAAC,iBAAD,EAAoB,CACjC,GAAG,KAAK/B,KAAL,CAAWG,eADmB,CAApB,CAAf;AAGD,eAJD,MAIO,OAAO,KAAP;AACR,aAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA5DF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA8FD;;AAnL6D","sourcesContent":["import React, { Component } from \"react\";\n\nimport styles from \"./Educational.module.css\";\n\nimport Modal from \"../../utils/Modal/Modal\";\n\nimport { Header, Form, Button } from \"semantic-ui-react\";\n\nimport Table from \"./AccountTable/Table\";\n\nexport default class AccountNumberInformation extends Component {\n  state = {\n    modalOpen: false,\n    counter: 0,\n    account_numbers: [],\n    current_account_number: \"\",\n  };\n\n  componentDidMount() {\n    let account_numbers_data = this.props.form;\n\n    console.log(account_numbers_data);\n    // If some previous information exists, just initialize state to that\n\n    if (account_numbers_data.length > 0) {\n      this.setState({ account_numbers: [...account_numbers_data] });\n    }\n\n    return;\n  }\n\n  validatedMainSubmission = () => {\n    let account_numbers = this.state.account_numbers;\n    if (account_numbers.length > 0) {\n      return true;\n    } else return false;\n  };\n\n  validated = () => {\n    if (\n      this.state.current_account_number === \"\" ||\n      this.state.current_account_number.length < 5\n    ) {\n      return false;\n    } else return true;\n  };\n\n  clearExistingForm = () => {\n    this.setState({\n      current_account_number: \"\",\n    });\n  };\n\n  storeCurrentInArray = () => {\n    let account_numbers_data = [\n      ...this.state.account_numbers,\n      this.state.current_account_number,\n    ];\n    this.setState({\n      account_numbers: account_numbers_data,\n    });\n  };\n\n  removeItemFormTable = (value) => {\n    let account_numbers_data = [...this.state.account_numbers];\n\n    console.log(value);\n\n    let new_account_numbers_data = account_numbers_data.filter((item) => {\n      return item !== value;\n    });\n\n    this.setState({\n      account_numbers: new_account_numbers_data,\n    });\n  };\n\n  handleLocalaccountFill = (value) => {\n    this.setState({ current_account_number: value });\n  };\n\n  handleAddaccount = (account_number) => {\n    let local_account_numbers = [...this.state.account_numbers, account_number];\n\n    this.setState({ account_numbers: [...local_account_numbers] });\n  };\n  changeModal = (state) => {\n    let modal = state === \"open\" ? true : false;\n    this.setState({ modalOpen: modal });\n  };\n  render() {\n    let { incrementStep, decrementStep, handleArrayFill } = {\n      ...this.props,\n    };\n\n    return (\n      <div className=\"container\">\n        <div className={styles[\"main_wrapper\"]}>\n          <Modal\n            modalState={this.state.modalOpen}\n            modalMessage=\"Add new account Number\"\n            closeModal={() => this.changeModal(\"close\")}\n          >\n            <Form>\n              <Form.Group widths=\"equal\">\n                <Form.Field\n                  control={Form.Input}\n                  label=\"account Number\"\n                  name=\"account_number_local\"\n                  required\n                  onChange={(e) => {\n                    this.handleLocalaccountFill(e.target.value);\n                  }}\n                  value={this.state[\"current_account_number\"]}\n                />\n              </Form.Group>\n\n              <Form.Group>\n                <Button\n                  positive\n                  onClick={(e) => {\n                    e.preventDefault();\n                    if (this.validated()) {\n                      this.storeCurrentInArray();\n                      this.setState({ modalOpen: false });\n                      this.clearExistingForm();\n                    }\n                  }}\n                >\n                  Add Number to List\n                </Button>\n              </Form.Group>\n            </Form>\n          </Modal>\n\n          <Header as=\"h2\">10. Account Numbers</Header>\n          <p>\n            Please fill up the details of Bank/Post Office Account numbers.\n          </p>\n\n          <Button\n            positive\n            onClick={(e) => {\n              this.setState({\n                modalOpen: true,\n              });\n            }}\n          >\n            Add account Number\n          </Button>\n        </div>\n        <Table\n          removeItemFormTable={this.removeItemFormTable}\n          data={this.state.account_numbers}\n        />\n\n        <div className={styles[\"btn_wrapper\"]}>\n          <Button.Group>\n            <Button\n              size=\"medium\"\n              color=\"yellow\"\n              onClick={(e) => {\n                e.preventDefault();\n                decrementStep();\n              }}\n            >\n              BACK: (9). LEGAL INFO\n            </Button>\n            <Button.Or />\n            <Button\n              size=\"medium\"\n              positive\n              disabled={!this.validatedMainSubmission()}\n              onClick={(e) => {\n                e.preventDefault();\n\n                if (this.validatedMainSubmission()) {\n                  handleArrayFill(\"account_numbers\", [\n                    ...this.state.account_numbers,\n                  ]);\n                } else return false;\n              }}\n            >\n              (11). POSTINGS INFO: NEXT\n            </Button>\n          </Button.Group>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}