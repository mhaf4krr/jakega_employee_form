{"ast":null,"code":"var _jsxFileName = \"/home/hyder/Desktop/Form_Project/client/src/components/Particulars/PersonsResidingWithYou/PersonsResidingWithYou.js\";\nimport React, { Component } from \"react\";\nimport styles from \"./Educational.module.css\";\nimport Modal from \"../../../utils/Modal/Modal\";\nimport { Header, Form, Button, TextArea } from \"semantic-ui-react\";\nimport Table from \"./PersonTable/Table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class PersonsResidingWithYou extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modalOpen: false,\n      counter: 0,\n      persons: [],\n      current_person: {\n        name: \"\",\n        from: \"\",\n        to: \"\",\n        relevant_info: \"\"\n      }\n    };\n\n    this.handleLocalFormFill = (key, value) => {\n      let form = { ...this.state.current_person\n      };\n\n      if (value === null) {\n        return;\n      }\n\n      form[key] = value;\n      this.setState({\n        current_person: { ...form\n        }\n      });\n    };\n\n    this.removeItemFormTable = counter => {\n      let persons_data = [...this.state.persons];\n      persons_data = persons_data.filter(member => {\n        return member.counter !== counter;\n      });\n      this.setState({\n        persons: [...persons_data]\n      });\n    };\n\n    this.validated = () => {\n      let form = this.state.current_person;\n      let validated = true;\n      let fields = [\"name\", \"from\", \"to\", \"relevant_info\"];\n\n      for (let i = 0; i < fields.length; i++) {\n        if (form[fields[i]] === \"\" || form[fields[i]] === null) {\n          validated = false;\n          break;\n        }\n      }\n\n      return validated;\n    };\n\n    this.storeCurrentIntoArray = () => {\n      let temp = this.state.counter + 1;\n      let current = { ...this.state.current_person,\n        counter: this.state.counter\n      };\n      this.setState({\n        persons: [...this.state.persons, current],\n        counter: temp\n      });\n    };\n\n    this.clearExistingForm = () => {\n      let current_data = this.state.current_person;\n      let fields = Object.keys(current_data);\n\n      for (let i = 0; i < fields.length; i++) {\n        current_data[fields[i]] = \"\";\n      }\n\n      this.setState({\n        current_person: { ...current_data\n        }\n      });\n    };\n\n    this.changeModal = state => {\n      let modal = state === \"open\" ? true : false;\n      this.setState({\n        modalOpen: modal\n      });\n    };\n  }\n\n  componentDidMount() {\n    let persons_data = this.props.form; // If some previous information exists, just initialize state to that\n\n    if (persons_data.length > 0) {\n      this.setState({\n        persons: [...persons_data]\n      });\n    }\n\n    return;\n  }\n\n  render() {\n    let {\n      incrementStep,\n      decrementStep,\n      handleArrayFill\n    } = { ...this.props\n    };\n    let form = this.state.current_person;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"main_wrapper\"],\n        children: [/*#__PURE__*/_jsxDEV(Modal, {\n          modalState: this.state.modalOpen,\n          modalMessage: \"Add Person Residing with you\",\n          closeModal: () => this.changeModal(\"close\"),\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              widths: \"equal\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n                control: Form.Input,\n                label: \"Name of Person\",\n                name: \"name\",\n                required: true,\n                onChange: e => {\n                  this.handleLocalFormFill(\"name\", e.target.value);\n                },\n                value: form[\"name\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n                type: \"date\",\n                label: \"From\",\n                required: true,\n                onChange: e => this.handleLocalFormFill(\"from\", e.target.value),\n                value: form[\"from\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n                type: \"date\",\n                label: \"To\",\n                required: true,\n                onChange: e => this.handleLocalFormFill(\"to\", e.target.value),\n                value: form[\"to\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              label: \"Relevant Contextual Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(TextArea, {\n                required: true,\n                placeholer: \"Address\",\n                onChange: e => {\n                  this.handleLocalFormFill(\"relevant_info\", e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                positive: true,\n                disabled: !this.validated(),\n                onClick: e => {\n                  e.preventDefault();\n\n                  if (this.validated()) {\n                    this.storeCurrentIntoArray();\n                    this.setState({\n                      modalOpen: false\n                    });\n                    this.clearExistingForm();\n                  }\n                },\n                children: \"Add Person to List\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Header, {\n          as: \"h2\",\n          children: \"23. Details of persons (other than family members) residing with you\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          positive: true,\n          onClick: e => {\n            this.setState({\n              modalOpen: true\n            });\n          },\n          children: \"Add Person\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        removeItemFormTable: this.removeItemFormTable,\n        data: this.state.persons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"btn_wrapper\"],\n        children: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"medium\",\n            color: \"yellow\",\n            onClick: e => {\n              e.preventDefault();\n              decrementStep();\n            },\n            children: \"BACK: (16). IN-LAWS INFO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button.Or, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"medium\",\n            positive: true,\n            onClick: e => {\n              e.preventDefault();\n\n              if (true) {\n                handleArrayFill(\"particulars_information\", [...this.state.persons], \"persons_residing_with\"); // incrementStep()\n              } else return false;\n            },\n            children: \"18. personS INFO: NEXT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/hyder/Desktop/Form_Project/client/src/components/Particulars/PersonsResidingWithYou/PersonsResidingWithYou.js"],"names":["React","Component","styles","Modal","Header","Form","Button","TextArea","Table","PersonsResidingWithYou","state","modalOpen","counter","persons","current_person","name","from","to","relevant_info","handleLocalFormFill","key","value","form","setState","removeItemFormTable","persons_data","filter","member","validated","fields","i","length","storeCurrentIntoArray","temp","current","clearExistingForm","current_data","Object","keys","changeModal","modal","componentDidMount","props","render","incrementStep","decrementStep","handleArrayFill","Input","e","target","preventDefault"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport styles from \"./Educational.module.css\";\n\nimport Modal from \"../../../utils/Modal/Modal\";\n\nimport { Header, Form, Button, TextArea,} from \"semantic-ui-react\";\n\n\n\nimport Table from \"./PersonTable/Table\";\n\nexport default class PersonsResidingWithYou extends Component {\n  state = {\n    modalOpen: false,\n    counter: 0,\n    persons: [],\n    current_person: {\n    \n      name: \"\",\n      from:\"\",\n      to:\"\",\n      relevant_info:\"\"\n    },\n  };\n\n  componentDidMount() {\n    let persons_data = this.props.form;\n\n    // If some previous information exists, just initialize state to that\n\n    if (persons_data.length > 0) {\n      this.setState({ persons: [...persons_data] });\n    }\n\n    return;\n  }\n\n  handleLocalFormFill = (key, value) => {\n    let form = { ...this.state.current_person };\n\n    if (value === null) {\n      return;\n    }\n\n    form[key] = value;\n    this.setState({ current_person: { ...form } });\n  };\n\n  \n\n  removeItemFormTable = (counter) => {\n    let persons_data = [...this.state.persons];\n\n    persons_data = persons_data.filter((member) => {\n      return member.counter !== counter;\n    });\n\n    this.setState({ persons: [...persons_data] });\n  };\n\n  validated = () => {\n    let form = this.state.current_person;\n    let validated = true;\n    let fields = [\"name\", \"from\",\"to\",\"relevant_info\"];\n\n    for (let i = 0; i < fields.length; i++) {\n      if (form[fields[i]] === \"\" || form[fields[i]] === null) {\n        validated = false;\n        break;\n      }\n    }\n\n    return validated;\n  };\n\n  storeCurrentIntoArray = () => {\n    let temp = this.state.counter + 1;\n    let current = {\n      ...this.state.current_person,\n      counter: this.state.counter,\n    };\n    this.setState({\n      persons: [...this.state.persons, current],\n      counter: temp,\n    });\n  };\n\n  clearExistingForm = () => {\n    let current_data = this.state.current_person;\n    let fields = Object.keys(current_data);\n\n    for (let i = 0; i < fields.length; i++) {\n      current_data[fields[i]] = \"\";\n    }\n\n  \n    this.setState({ current_person: { ...current_data } });\n  };\n\n  changeModal = (state) => {\n    let modal = state === \"open\" ? true : false;\n    this.setState({ modalOpen: modal });\n  };\n  render() {\n    let { incrementStep, decrementStep, handleArrayFill } = {\n      ...this.props,\n    };\n\n    let form = this.state.current_person;\n\n    return (\n      <div className=\"container\">\n        <div className={styles[\"main_wrapper\"]}>\n          <Modal\n            modalState={this.state.modalOpen}\n            modalMessage=\"Add Person Residing with you\"\n            closeModal={() => this.changeModal(\"close\")}\n          >\n            <Form>\n              <Form.Group widths=\"equal\">\n            \n                <Form.Field\n                  control={Form.Input}\n                  label=\"Name of Person\"\n                  name=\"name\"\n                  required\n                  onChange={(e) => {\n                    this.handleLocalFormFill(\"name\", e.target.value);\n                  }}\n                  value={form[\"name\"]}\n                />\n\n<Form.Input\n                  type=\"date\"\n                  label=\"From\"\n                  required\n                  onChange={(e) =>\n                    this.handleLocalFormFill(\"from\", e.target.value)\n                  }\n                  value={form[\"from\"]}\n                />\n              \n\n\n              <Form.Input\n                  type=\"date\"\n                  label=\"To\"\n                  required\n                  onChange={(e) =>\n                    this.handleLocalFormFill(\"to\", e.target.value)\n                  }\n                  value={form[\"to\"]}\n                />\n\n              </Form.Group>\n\n              <Form.Field label=\"Relevant Contextual Information\" />\n              <Form.Group>\n                <TextArea\n                  required\n                  placeholer=\"Address\"\n                  onChange={(e) => {\n                    this.handleLocalFormFill(\"relevant_info\", e.target.value);\n                  }}\n                />\n              </Form.Group>\n\n              \n\n              <Form.Group>\n                <Button\n                  positive\n                  disabled={!this.validated()}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    if (this.validated()) {\n                      this.storeCurrentIntoArray();\n                      this.setState({ modalOpen: false });\n                      this.clearExistingForm();\n                    }\n                  }}\n                >\n                  Add Person to List\n                </Button>\n              </Form.Group>\n            </Form>\n          </Modal>\n\n          <Header as=\"h2\">23. Details of persons (other than family members) residing with you</Header>\n         \n\n          <Button\n            positive\n            onClick={(e) => {\n              this.setState({\n                modalOpen: true,\n              });\n            }}\n          >\n            Add Person\n          </Button>\n        </div>\n        <Table\n          removeItemFormTable={this.removeItemFormTable}\n          data={this.state.persons}\n        />\n\n        <div className={styles[\"btn_wrapper\"]}>\n          <Button.Group>\n            <Button\n              size=\"medium\"\n              color=\"yellow\"\n              onClick={(e) => {\n                e.preventDefault();\n                decrementStep();\n              }}\n            >\n              BACK: (16). IN-LAWS INFO\n            </Button>\n            <Button.Or />\n            <Button\n              size=\"medium\"\n              positive\n           \n              onClick={(e) => {\n                e.preventDefault();\n\n                if (true) {\n                  handleArrayFill(\"particulars_information\", [\n                    ...this.state.persons],\n\n                    \"persons_residing_with\",\n                  );\n                  // incrementStep()\n                } else return false;\n              }}\n            >\n              18. personS INFO: NEXT\n            </Button>\n          </Button.Group>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}