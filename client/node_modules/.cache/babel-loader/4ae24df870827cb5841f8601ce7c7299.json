{"ast":null,"code":"var _jsxFileName = \"/home/hyder/Desktop/jakega_employee_form/client/src/components/ServiceInformation/Joining_Details/JoiningInformation.js\";\nimport React, { Component } from \"react\";\nimport PageTemplate from \"../../Page_Template/PageTemplate\";\nimport { Header, Form, Select, Button } from \"semantic-ui-react\";\nimport { Departments } from \"../../../utils/DepartmenListData\";\nimport styles from \"./JoiningInformation.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class JoiningInformation extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      recruiting_agency: null,\n      date_of_appointment: null,\n      order_number: \"\",\n      initial_joining_department: null,\n      initial_joining_office: \"\",\n      date_of_joining: null,\n      designation: \"\",\n      employee_initial_cadre: null,\n      employee_type: null,\n      employee_category: null\n    };\n    this.agencyOptions = [\"JKPSC\", \"JKSSB\", \"OTHER\"].map(agency => {\n      return {\n        key: agency,\n        text: agency,\n        value: agency\n      };\n    });\n\n    this.validatedMainSubmission = () => {\n      let formData = { ...this.state\n      };\n      let validated = true;\n      let fields = [\"recruiting_agency\", \"date_of_appointment\", \"order_number\", \"initial_joining_date\", \"initial_joining_office\", \"date_of_joining\", \"designation\", \"employee_initial_cadre\", \"employee_type\", \"employee_category\"];\n\n      for (let i = 0; i < fields.length; i++) {\n        if (formData[fields[i]] === \"\" || formData[fields[i]] === null) {\n          validated = false;\n          break;\n        }\n      }\n\n      return validated;\n    };\n\n    this.handleLocalFormFill = (key, value) => {\n      if (value === null) return;\n      let form_data = { ...this.state\n      };\n      form_data[key] = value;\n      this.setState({ ...form_data\n      });\n    };\n  }\n\n  render() {\n    let form = this.state;\n    return /*#__PURE__*/_jsxDEV(PageTemplate, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        as: \"h2\",\n        children: \"12. Joining Information \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter the details of your joining to the service\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            widths: \"equal\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n              required: true,\n              selection: true,\n              control: Select,\n              options: this.agencyOptions,\n              selected: form[\"recruiting_agency\"],\n              label: {\n                children: \"Recruiting Agency\",\n                htmlFor: \"form-select-control-agency\"\n              },\n              placeholder: form[\"recruiting_agency\"] || \"Recruiting Agency\",\n              onChange: (e, {\n                value\n              }) => {\n                this.handleLocalFormFill(\"recruiting_agency\", value);\n              },\n              searchInput: {\n                id: \"form-select-control-agency\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              type: \"date\",\n              label: \"Date of Appointment\",\n              required: true,\n              onChange: e => this.handleLocalFormFill(\"date_of_appointment\", e.target.value),\n              value: form[\"date_of_appointment\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              control: Form.Input,\n              label: \"Order No.\",\n              name: \"order_number\",\n              required: true,\n              onChange: e => {\n                this.handleLocalFormFill(\"order_number\", e.target.value);\n              },\n              value: form[\"order_number\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              required: true,\n              selection: true,\n              search: true,\n              control: Select,\n              options: Departments.map(dept => {\n                return {\n                  value: dept,\n                  text: dept,\n                  key: dept\n                };\n              }),\n              selected: form[\"initial_joining_department\"],\n              label: {\n                children: \"Initial Joining Department\",\n                htmlFor: \"form-select-control-joining_department\"\n              },\n              placeholder: form[\"joining_department\"] || \"Initial Joining Dept.\",\n              onChange: (e, {\n                value\n              }) => {\n                this.handleLocalFormFill(\"initial_joining_department\", value);\n              },\n              searchInput: {\n                id: \"form-select-control-joining_department\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            widths: \"equal\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n              control: Form.Input,\n              label: \"Initial Joining Office.\",\n              name: \"initial_joining_office\",\n              required: true,\n              onChange: e => {\n                this.handleLocalFormFill(\"initial_joining_office\", e.target.value);\n              },\n              value: form[\"initial_joining_office\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              type: \"date\",\n              label: \"Date of Joining\",\n              required: true,\n              onChange: e => this.handleLocalFormFill(\"date_of_joining\", e.target.value),\n              value: form[\"date_of_joining\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              control: Form.Input,\n              label: \"Designation\",\n              name: \"designation\",\n              required: true,\n              onChange: e => {\n                this.handleLocalFormFill(\"designation\", e.target.value);\n              },\n              value: form[\"designation\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            widths: \"equal\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n              required: true,\n              selection: true,\n              control: Select,\n              options: [\"STATE\", \"DIVISION\", \"DISTRICT\", \"NOT APPLICABLE\"].map(cadre => {\n                return {\n                  value: cadre,\n                  text: cadre,\n                  key: cadre\n                };\n              }),\n              selected: form[\"initial_cadre\"],\n              label: {\n                children: \"Employee Initial Cadre\",\n                htmlFor: \"form-select-control-cadre\"\n              },\n              placeholder: form[\"employee_initial_cadre\"] || \"Employee Initial Cadre\",\n              onChange: (e, {\n                value\n              }) => {\n                this.handleLocalFormFill(\"employee_initial_cadre\", value);\n              },\n              searchInput: {\n                id: \"form-select-control-cadre\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              required: true,\n              selection: true,\n              control: Select,\n              options: [\"PERMANENT\", \"TEMPORARY\"].map(cadre => {\n                return {\n                  value: cadre,\n                  text: cadre,\n                  key: cadre\n                };\n              }),\n              selected: form[\"employee_type\"],\n              label: {\n                children: \"Employee Type\",\n                htmlFor: \"form-select-control-employee_type\"\n              },\n              placeholder: form[\"employee_type\"] || \"Employee Type\",\n              onChange: (e, {\n                value\n              }) => {\n                this.handleLocalFormFill(\"employee_type\", value);\n              },\n              searchInput: {\n                id: \"form-select-control-employee_type\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              required: true,\n              selection: true,\n              control: Select,\n              options: [\"GAZETTED OFFICER\", \"NON GAZETTED OFFICER\", \"CLASS 4TH\"].map(cadre => {\n                return {\n                  value: cadre,\n                  text: cadre,\n                  key: cadre\n                };\n              }),\n              selected: form[\"employee_category\"],\n              label: {\n                children: \"Employee Category\",\n                htmlFor: \"form-select-control-employee_category\"\n              },\n              placeholder: form[\"employee_category\"] || \"Employee Category\",\n              onChange: (e, {\n                value\n              }) => {\n                this.handleLocalFormFill(\"employee_category\", value);\n              },\n              searchInput: {\n                id: \"form-select-control-employee_category\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"btn_wrapper\"],\n          children: /*#__PURE__*/_jsxDEV(Button.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              size: \"medium\",\n              color: \"yellow\",\n              onClick: e => {\n                e.preventDefault();\n                this.props.decrementStep();\n              },\n              children: \"BACK: (10). ACCOUNTS INFO\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button.Or, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"medium\",\n              positive: true,\n              disabled: !this.validatedMainSubmission(),\n              onClick: e => {\n                e.preventDefault();\n\n                if (this.validatedMainSubmission()) {\n                  this.props.incrementStep();\n                } else return false;\n              },\n              children: \"(12). PROMOTIONS INFO : NEXT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/hyder/Desktop/jakega_employee_form/client/src/components/ServiceInformation/Joining_Details/JoiningInformation.js"],"names":["React","Component","PageTemplate","Header","Form","Select","Button","Departments","styles","JoiningInformation","state","recruiting_agency","date_of_appointment","order_number","initial_joining_department","initial_joining_office","date_of_joining","designation","employee_initial_cadre","employee_type","employee_category","agencyOptions","map","agency","key","text","value","validatedMainSubmission","formData","validated","fields","i","length","handleLocalFormFill","form_data","setState","render","form","children","htmlFor","e","id","target","Input","dept","cadre","preventDefault","props","decrementStep","incrementStep"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PageTemplate from \"../../Page_Template/PageTemplate\";\n\nimport { Header, Form, Select, Button } from \"semantic-ui-react\";\n\nimport { Departments } from \"../../../utils/DepartmenListData\";\n\nimport styles from \"./JoiningInformation.module.css\";\n\nexport default class JoiningInformation extends Component {\n  state = {\n    recruiting_agency: null,\n    date_of_appointment: null,\n    order_number: \"\",\n    initial_joining_department: null,\n    initial_joining_office: \"\",\n    date_of_joining: null,\n    designation: \"\",\n    employee_initial_cadre: null,\n    employee_type: null,\n    employee_category: null,\n  };\n\n  agencyOptions = [\"JKPSC\", \"JKSSB\", \"OTHER\"].map((agency) => {\n    return { key: agency, text: agency, value: agency };\n  });\n\n  validatedMainSubmission = () => {\n    let formData = { ...this.state };\n\n    let validated = true;\n    let fields = [\n      \"recruiting_agency\",\n      \"date_of_appointment\",\n      \"order_number\",\n      \"initial_joining_date\",\n      \"initial_joining_office\",\n      \"date_of_joining\",\n      \"designation\",\n      \"employee_initial_cadre\",\n      \"employee_type\",\n      \"employee_category\",\n    ];\n\n    for (let i = 0; i < fields.length; i++) {\n      if (formData[fields[i]] === \"\" || formData[fields[i]] === null) {\n        validated = false;\n        break;\n      }\n    }\n\n    return validated;\n  };\n\n  handleLocalFormFill = (key, value) => {\n    if (value === null) return;\n    let form_data = { ...this.state };\n\n    form_data[key] = value;\n\n    this.setState({ ...form_data });\n  };\n\n  render() {\n    let form = this.state;\n    return (\n      <PageTemplate>\n        <Header as=\"h2\">12. Joining Information </Header>\n        <p>Please enter the details of your joining to the service</p>\n        <div>\n          <Form>\n            <Form.Group widths=\"equal\">\n              <Form.Field\n                required\n                selection\n                control={Select}\n                options={this.agencyOptions}\n                selected={form[\"recruiting_agency\"]}\n                label={{\n                  children: \"Recruiting Agency\",\n                  htmlFor: \"form-select-control-agency\",\n                }}\n                placeholder={form[\"recruiting_agency\"] || \"Recruiting Agency\"}\n                onChange={(e, { value }) => {\n                  this.handleLocalFormFill(\n                    \"recruiting_agency\",\n\n                    value\n                  );\n                }}\n                searchInput={{ id: \"form-select-control-agency\" }}\n              />\n\n              <Form.Input\n                type=\"date\"\n                label=\"Date of Appointment\"\n                required\n                onChange={(e) =>\n                  this.handleLocalFormFill(\n                    \"date_of_appointment\",\n                    e.target.value\n                  )\n                }\n                value={form[\"date_of_appointment\"]}\n              />\n\n              <Form.Field\n                control={Form.Input}\n                label=\"Order No.\"\n                name=\"order_number\"\n                required\n                onChange={(e) => {\n                  this.handleLocalFormFill(\n                    \"order_number\",\n\n                    e.target.value\n                  );\n                }}\n                value={form[\"order_number\"]}\n              />\n\n              <Form.Field\n                required\n                selection\n                search\n                control={Select}\n                options={Departments.map((dept) => {\n                  return { value: dept, text: dept, key: dept };\n                })}\n                selected={form[\"initial_joining_department\"]}\n                label={{\n                  children: \"Initial Joining Department\",\n                  htmlFor: \"form-select-control-joining_department\",\n                }}\n                placeholder={\n                  form[\"joining_department\"] || \"Initial Joining Dept.\"\n                }\n                onChange={(e, { value }) => {\n                  this.handleLocalFormFill(\n                    \"initial_joining_department\",\n\n                    value\n                  );\n                }}\n                searchInput={{ id: \"form-select-control-joining_department\" }}\n              />\n            </Form.Group>\n\n            <Form.Group widths=\"equal\">\n              <Form.Field\n                control={Form.Input}\n                label=\"Initial Joining Office.\"\n                name=\"initial_joining_office\"\n                required\n                onChange={(e) => {\n                  this.handleLocalFormFill(\n                    \"initial_joining_office\",\n\n                    e.target.value\n                  );\n                }}\n                value={form[\"initial_joining_office\"]}\n              />\n\n              <Form.Input\n                type=\"date\"\n                label=\"Date of Joining\"\n                required\n                onChange={(e) =>\n                  this.handleLocalFormFill(\"date_of_joining\", e.target.value)\n                }\n                value={form[\"date_of_joining\"]}\n              />\n\n              <Form.Field\n                control={Form.Input}\n                label=\"Designation\"\n                name=\"designation\"\n                required\n                onChange={(e) => {\n                  this.handleLocalFormFill(\n                    \"designation\",\n\n                    e.target.value\n                  );\n                }}\n                value={form[\"designation\"]}\n              />\n            </Form.Group>\n\n            <Form.Group widths=\"equal\">\n              <Form.Field\n                required\n                selection\n                control={Select}\n                options={[\n                  \"STATE\",\n                  \"DIVISION\",\n                  \"DISTRICT\",\n                  \"NOT APPLICABLE\",\n                ].map((cadre) => {\n                  return { value: cadre, text: cadre, key: cadre };\n                })}\n                selected={form[\"initial_cadre\"]}\n                label={{\n                  children: \"Employee Initial Cadre\",\n                  htmlFor: \"form-select-control-cadre\",\n                }}\n                placeholder={\n                  form[\"employee_initial_cadre\"] || \"Employee Initial Cadre\"\n                }\n                onChange={(e, { value }) => {\n                  this.handleLocalFormFill(\n                    \"employee_initial_cadre\",\n\n                    value\n                  );\n                }}\n                searchInput={{ id: \"form-select-control-cadre\" }}\n              />\n\n              <Form.Field\n                required\n                selection\n                control={Select}\n                options={[\"PERMANENT\", \"TEMPORARY\"].map((cadre) => {\n                  return { value: cadre, text: cadre, key: cadre };\n                })}\n                selected={form[\"employee_type\"]}\n                label={{\n                  children: \"Employee Type\",\n                  htmlFor: \"form-select-control-employee_type\",\n                }}\n                placeholder={form[\"employee_type\"] || \"Employee Type\"}\n                onChange={(e, { value }) => {\n                  this.handleLocalFormFill(\n                    \"employee_type\",\n\n                    value\n                  );\n                }}\n                searchInput={{ id: \"form-select-control-employee_type\" }}\n              />\n\n              <Form.Field\n                required\n                selection\n                control={Select}\n                options={[\n                  \"GAZETTED OFFICER\",\n                  \"NON GAZETTED OFFICER\",\n                  \"CLASS 4TH\",\n                ].map((cadre) => {\n                  return { value: cadre, text: cadre, key: cadre };\n                })}\n                selected={form[\"employee_category\"]}\n                label={{\n                  children: \"Employee Category\",\n                  htmlFor: \"form-select-control-employee_category\",\n                }}\n                placeholder={form[\"employee_category\"] || \"Employee Category\"}\n                onChange={(e, { value }) => {\n                  this.handleLocalFormFill(\n                    \"employee_category\",\n\n                    value\n                  );\n                }}\n                searchInput={{ id: \"form-select-control-employee_category\" }}\n              />\n            </Form.Group>\n          </Form>\n\n          <div className={styles[\"btn_wrapper\"]}>\n            <Button.Group>\n              <Button\n                size=\"medium\"\n                color=\"yellow\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  this.props.decrementStep();\n                }}\n              >\n                BACK: (10). ACCOUNTS INFO\n              </Button>\n              <Button.Or />\n              <Button\n                size=\"medium\"\n                positive\n                disabled={!this.validatedMainSubmission()}\n                onClick={(e) => {\n                  e.preventDefault();\n\n                  if (this.validatedMainSubmission()) {\n                    this.props.incrementStep();\n                  } else return false;\n                }}\n              >\n                (12). PROMOTIONS INFO : NEXT\n              </Button>\n            </Button.Group>\n          </div>\n        </div>\n      </PageTemplate>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}