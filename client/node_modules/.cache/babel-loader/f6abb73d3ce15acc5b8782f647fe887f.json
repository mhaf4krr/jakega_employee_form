{"ast":null,"code":"var _jsxFileName = \"/home/hyder/Desktop/Form_Project/client/src/components/Particulars/PreviousEmployments/PreviousEmployments.js\";\nimport React, { Component } from \"react\";\nimport styles from \"./Educational.module.css\";\nimport Modal from \"../../../utils/Modal/Modal\";\nimport { Header, Form, Button, TextArea, Select } from \"semantic-ui-react\";\nimport Table from \"./EmploymentsTable/Table\";\nimport { countries } from \"../../../utils/NationalityData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class PreviousEmployments extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modalOpen: false,\n      counter: 0,\n      employments: [],\n      current_emplyment: {\n        from: null,\n        to: null,\n        designation: \"\",\n        emoluments: \"\",\n        nature_of_employment: \"\",\n        details_of_employer: \"\",\n        reasons_for_leaving: \"\"\n      }\n    };\n\n    this.handleLocalFormFill = (key, value) => {\n      let form = { ...this.state.current_emplyment\n      };\n\n      if (value === null) {\n        return;\n      }\n\n      form[key] = value;\n      this.setState({\n        current_emplyment: { ...form\n        }\n      });\n    };\n\n    this.validatedMainSubmission = () => {\n      let employments = this.state.employments;\n\n      if (employments.length > 0) {\n        return true;\n      } else return false;\n    };\n\n    this.removeItemFormTable = counter => {\n      let employments_data = [...this.state.employments];\n      employments_data = employments_data.filter(member => {\n        return member.counter !== counter;\n      });\n      this.setState({\n        employments: [...employments_data]\n      });\n    };\n\n    this.validated = () => {\n      let form = this.state.current_emplyment;\n      let validated = true;\n      let fields = [\"occupation\", \"name\", \"details_of_employer_university\", \"present_address\", \"relation\"];\n\n      for (let i = 0; i < fields.length; i++) {\n        if (form[fields[i]] === \"\" || form[fields[i]] === null) {\n          validated = false;\n          break;\n        }\n      }\n\n      return validated;\n    };\n\n    this.storeCurrentIntoArray = () => {\n      let temp = this.state.counter + 1;\n      let current = { ...this.state.current_emplyment,\n        counter: this.state.counter\n      };\n      this.setState({\n        employments: [...this.state.employments, current],\n        counter: temp\n      });\n    };\n\n    this.clearExistingForm = () => {\n      let current_data = this.state.current_emplyment;\n      let fields = Object.keys(current_data);\n\n      for (let i = 0; i < fields.length; i++) {\n        current_data[fields[i]] = \"\";\n      }\n\n      current_data[\"relation\"] = null;\n      this.setState({\n        current_emplyment: { ...current_data\n        }\n      });\n    };\n\n    this.changeModal = state => {\n      let modal = state === \"open\" ? true : false;\n      this.setState({\n        modalOpen: modal\n      });\n    };\n  }\n\n  componentDidMount() {\n    let employments_data = this.props.form; // If some previous information exists, just initialize state to that\n\n    if (employments_data.length > 0) {\n      this.setState({\n        employments: [...employments_data]\n      });\n    }\n\n    return;\n  }\n\n  render() {\n    let {\n      incrementStep,\n      decrementStep,\n      handleArrayFill\n    } = { ...this.props\n    };\n    let form = this.state.current_emplyment;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"main_wrapper\"],\n        children: [/*#__PURE__*/_jsxDEV(Modal, {\n          modalState: this.state.modalOpen,\n          modalMessage: \"Add a Family Member NRI\",\n          closeModal: () => this.changeModal(\"close\"),\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              widths: \"equal\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n                type: \"date\",\n                label: \"From\",\n                required: true,\n                onChange: e => this.handleLocalFormFill(\"from\", e.target.value),\n                value: form[\"from\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n                type: \"date\",\n                label: \"To\",\n                required: true,\n                onChange: e => this.handleLocalFormFill(\"to\", e.target.value),\n                value: form[\"to\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                control: Form.Input,\n                label: \"Designation\",\n                name: \"designation\",\n                required: true,\n                onChange: e => {\n                  this.handleLocalFormFill(\"designation\", e.target.value);\n                },\n                value: form[\"designation\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                required: true,\n                control: Select,\n                options: [\"Central Govt.\", \"State Govt.\", \"Semi Govt\", \"Quasi Govt.\", \"Autonomous Body\", \"Public Sector Undertaking\", \"Private Firm\", \"Public Project\"].map(item => {\n                  return {\n                    key: item,\n                    text: item,\n                    value: item\n                  };\n                }),\n                label: {\n                  children: \"Nature of Employment\",\n                  htmlFor: \"form-select-control-nature\"\n                },\n                placeholder: form[\"nature_of_employment\"] || \"Nature of Employment\",\n                search: true,\n                onChange: (e, {\n                  value\n                }) => {\n                  console.log(value);\n                  this.handleLocalFormFill(\"nature_of_employment\", value);\n                },\n                searchInput: {\n                  id: \"form-select-control-nature\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 1\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              label: \"Emoluments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(TextArea, {\n                required: true,\n                placeholer: \"Address\",\n                onChange: e => {\n                  this.handleLocalFormFill(\"present_address\", e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              label: \"Details of Employer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(TextArea, {\n                required: true,\n                placeholer: \"Details of Employer\",\n                onChange: e => {\n                  this.handleLocalFormFill(\"details_of_employer\", e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              label: \"Reasons for Leaving previous Service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(TextArea, {\n                required: true,\n                placeholer: \"Details of Employer\",\n                onChange: e => {\n                  this.handleLocalFormFill(\"details_of_employer\", e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                positive: true,\n                disabled: !this.validated(),\n                onClick: e => {\n                  e.preventDefault();\n\n                  if (this.validated()) {\n                    this.storeCurrentIntoArray();\n                    this.setState({\n                      modalOpen: false\n                    });\n                    this.clearExistingForm();\n                  }\n                },\n                children: \"Add Family Member\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Header, {\n          as: \"h2\",\n          children: \"26. Particulars of Previous Employments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Details of previous employments under central or state Government or state Government or a semi Government or a Quasi Government body or an autonomous bodu or a Public Sector undertaking or a Private Firm or Public Projects:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          positive: true,\n          onClick: e => {\n            this.setState({\n              modalOpen: true\n            });\n          },\n          children: \"Add Child Detail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        removeItemFormTable: this.removeItemFormTable,\n        data: this.state.employments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"btn_wrapper\"],\n        children: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"medium\",\n            color: \"yellow\",\n            onClick: e => {\n              e.preventDefault();\n              decrementStep();\n            },\n            children: \"BACK: (24). NRI FAMILY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button.Or, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"medium\",\n            positive: true,\n            onClick: e => {\n              e.preventDefault();\n\n              if (true) {\n                handleArrayFill(\"particulars_information\", [...this.state.employments], \"nri_family\");\n                incrementStep();\n              } else return false;\n            },\n            children: \"26 PREVIOUS EMPLOYMENT: NEXT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/hyder/Desktop/Form_Project/client/src/components/Particulars/PreviousEmployments/PreviousEmployments.js"],"names":["React","Component","styles","Modal","Header","Form","Button","TextArea","Select","Table","countries","PreviousEmployments","state","modalOpen","counter","employments","current_emplyment","from","to","designation","emoluments","nature_of_employment","details_of_employer","reasons_for_leaving","handleLocalFormFill","key","value","form","setState","validatedMainSubmission","length","removeItemFormTable","employments_data","filter","member","validated","fields","i","storeCurrentIntoArray","temp","current","clearExistingForm","current_data","Object","keys","changeModal","modal","componentDidMount","props","render","incrementStep","decrementStep","handleArrayFill","e","target","Input","map","item","text","children","htmlFor","console","log","id","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAOC,KAAP,MAAkB,4BAAlB;AAEA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,EAA+BC,QAA/B,EAAyCC,MAAzC,QAAuD,mBAAvD;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AAEA,SAAQC,SAAR,QAAwB,gCAAxB;;AAEA,eAAe,MAAMC,mBAAN,SAAkCV,SAAlC,CAA4C;AAAA;AAAA;AAAA,SACzDW,KADyD,GACjD;AACNC,MAAAA,SAAS,EAAE,KADL;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,WAAW,EAAE,EAHP;AAINC,MAAAA,iBAAiB,EAAE;AACjBC,QAAAA,IAAI,EAAE,IADW;AAEjBC,QAAAA,EAAE,EAAE,IAFa;AAGjBC,QAAAA,WAAW,EAAE,EAHI;AAIjBC,QAAAA,UAAU,EAAC,EAJM;AAKjBC,QAAAA,oBAAoB,EAAC,EALJ;AAMjBC,QAAAA,mBAAmB,EAAC,EANH;AAOjBC,QAAAA,mBAAmB,EAAC;AAPH;AAJb,KADiD;;AAAA,SA8BzDC,mBA9ByD,GA8BnC,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACpC,UAAIC,IAAI,GAAG,EAAE,GAAG,KAAKf,KAAL,CAAWI;AAAhB,OAAX;;AAEA,UAAIU,KAAK,KAAK,IAAd,EAAoB;AAClB;AACD;;AAEDC,MAAAA,IAAI,CAACF,GAAD,CAAJ,GAAYC,KAAZ;AACA,WAAKE,QAAL,CAAc;AAAEZ,QAAAA,iBAAiB,EAAE,EAAE,GAAGW;AAAL;AAArB,OAAd;AACD,KAvCwD;;AAAA,SAyCzDE,uBAzCyD,GAyC/B,MAAM;AAC9B,UAAId,WAAW,GAAG,KAAKH,KAAL,CAAWG,WAA7B;;AACA,UAAIA,WAAW,CAACe,MAAZ,GAAqB,CAAzB,EAA4B;AAC1B,eAAO,IAAP;AACD,OAFD,MAEO,OAAO,KAAP;AACR,KA9CwD;;AAAA,SAgDzDC,mBAhDyD,GAgDlCjB,OAAD,IAAa;AACjC,UAAIkB,gBAAgB,GAAG,CAAC,GAAG,KAAKpB,KAAL,CAAWG,WAAf,CAAvB;AAEAiB,MAAAA,gBAAgB,GAAGA,gBAAgB,CAACC,MAAjB,CAAyBC,MAAD,IAAY;AACrD,eAAOA,MAAM,CAACpB,OAAP,KAAmBA,OAA1B;AACD,OAFkB,CAAnB;AAIA,WAAKc,QAAL,CAAc;AAAEb,QAAAA,WAAW,EAAE,CAAC,GAAGiB,gBAAJ;AAAf,OAAd;AACD,KAxDwD;;AAAA,SA0DzDG,SA1DyD,GA0D7C,MAAM;AAChB,UAAIR,IAAI,GAAG,KAAKf,KAAL,CAAWI,iBAAtB;AACA,UAAImB,SAAS,GAAG,IAAhB;AACA,UAAIC,MAAM,GAAG,CAAC,YAAD,EAAe,MAAf,EAAsB,gCAAtB,EAAwD,iBAAxD,EAA2E,UAA3E,CAAb;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAAM,CAACN,MAA3B,EAAmCO,CAAC,EAApC,EAAwC;AACtC,YAAIV,IAAI,CAACS,MAAM,CAACC,CAAD,CAAP,CAAJ,KAAoB,EAApB,IAA0BV,IAAI,CAACS,MAAM,CAACC,CAAD,CAAP,CAAJ,KAAoB,IAAlD,EAAwD;AACtDF,UAAAA,SAAS,GAAG,KAAZ;AAEA;AACD;AACF;;AAED,aAAOA,SAAP;AACD,KAxEwD;;AAAA,SA0EzDG,qBA1EyD,GA0EjC,MAAM;AAC5B,UAAIC,IAAI,GAAG,KAAK3B,KAAL,CAAWE,OAAX,GAAqB,CAAhC;AACA,UAAI0B,OAAO,GAAG,EACZ,GAAG,KAAK5B,KAAL,CAAWI,iBADF;AAEZF,QAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE;AAFR,OAAd;AAIA,WAAKc,QAAL,CAAc;AACZb,QAAAA,WAAW,EAAE,CAAC,GAAG,KAAKH,KAAL,CAAWG,WAAf,EAA4ByB,OAA5B,CADD;AAEZ1B,QAAAA,OAAO,EAAEyB;AAFG,OAAd;AAID,KApFwD;;AAAA,SAsFzDE,iBAtFyD,GAsFrC,MAAM;AACxB,UAAIC,YAAY,GAAG,KAAK9B,KAAL,CAAWI,iBAA9B;AACA,UAAIoB,MAAM,GAAGO,MAAM,CAACC,IAAP,CAAYF,YAAZ,CAAb;;AAEA,WAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAAM,CAACN,MAA3B,EAAmCO,CAAC,EAApC,EAAwC;AACtCK,QAAAA,YAAY,CAACN,MAAM,CAACC,CAAD,CAAP,CAAZ,GAA0B,EAA1B;AACD;;AAEDK,MAAAA,YAAY,CAAC,UAAD,CAAZ,GAA2B,IAA3B;AAEA,WAAKd,QAAL,CAAc;AAAEZ,QAAAA,iBAAiB,EAAE,EAAE,GAAG0B;AAAL;AAArB,OAAd;AACD,KAjGwD;;AAAA,SAmGzDG,WAnGyD,GAmG1CjC,KAAD,IAAW;AACvB,UAAIkC,KAAK,GAAGlC,KAAK,KAAK,MAAV,GAAmB,IAAnB,GAA0B,KAAtC;AACA,WAAKgB,QAAL,CAAc;AAAEf,QAAAA,SAAS,EAAEiC;AAAb,OAAd;AACD,KAtGwD;AAAA;;AAkBzDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIf,gBAAgB,GAAG,KAAKgB,KAAL,CAAWrB,IAAlC,CADkB,CAGlB;;AAEA,QAAIK,gBAAgB,CAACF,MAAjB,GAA0B,CAA9B,EAAiC;AAC/B,WAAKF,QAAL,CAAc;AAAEb,QAAAA,WAAW,EAAE,CAAC,GAAGiB,gBAAJ;AAAf,OAAd;AACD;;AAED;AACD;;AA2EDiB,EAAAA,MAAM,GAAG;AACP,QAAI;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA,aAAjB;AAAgCC,MAAAA;AAAhC,QAAoD,EACtD,GAAG,KAAKJ;AAD8C,KAAxD;AAIA,QAAIrB,IAAI,GAAG,KAAKf,KAAL,CAAWI,iBAAtB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEd,MAAM,CAAC,cAAD,CAAtB;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,UAAU,EAAE,KAAKU,KAAL,CAAWC,SADzB;AAEE,UAAA,YAAY,EAAC,yBAFf;AAGE,UAAA,UAAU,EAAE,MAAM,KAAKgC,WAAL,CAAiB,OAAjB,CAHpB;AAAA,iCAKE,QAAC,IAAD;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,MAAM,EAAC,OAAnB;AAAA,sCAGd,QAAC,IAAD,CAAM,KAAN;AACkB,gBAAA,IAAI,EAAC,MADvB;AAEkB,gBAAA,KAAK,EAAC,MAFxB;AAGkB,gBAAA,QAAQ,MAH1B;AAIkB,gBAAA,QAAQ,EAAGQ,CAAD,IACR,KAAK7B,mBAAL,CAAyB,MAAzB,EAAiC6B,CAAC,CAACC,MAAF,CAAS5B,KAA1C,CALpB;AAOkB,gBAAA,KAAK,EAAEC,IAAI,CAAC,MAAD;AAP7B;AAAA;AAAA;AAAA;AAAA,sBAHc,eAed,QAAC,IAAD,CAAM,KAAN;AACkB,gBAAA,IAAI,EAAC,MADvB;AAEkB,gBAAA,KAAK,EAAC,IAFxB;AAGkB,gBAAA,QAAQ,MAH1B;AAIkB,gBAAA,QAAQ,EAAG0B,CAAD,IACR,KAAK7B,mBAAL,CAAyB,IAAzB,EAA+B6B,CAAC,CAACC,MAAF,CAAS5B,KAAxC,CALpB;AAOkB,gBAAA,KAAK,EAAEC,IAAI,CAAC,IAAD;AAP7B;AAAA;AAAA;AAAA;AAAA,sBAfc,eAyBE,QAAC,IAAD,CAAM,KAAN;AACE,gBAAA,OAAO,EAAEtB,IAAI,CAACkD,KADhB;AAEE,gBAAA,KAAK,EAAC,aAFR;AAGE,gBAAA,IAAI,EAAC,aAHP;AAIE,gBAAA,QAAQ,MAJV;AAKE,gBAAA,QAAQ,EAAGF,CAAD,IAAO;AACf,uBAAK7B,mBAAL,CAAyB,aAAzB,EAAwC6B,CAAC,CAACC,MAAF,CAAS5B,KAAjD;AACD,iBAPH;AAQE,gBAAA,KAAK,EAAEC,IAAI,CAAC,aAAD;AARb;AAAA;AAAA;AAAA;AAAA,sBAzBF,eAoCd,QAAC,IAAD,CAAM,KAAN;AACkB,gBAAA,QAAQ,MAD1B;AAEkB,gBAAA,OAAO,EAAEnB,MAF3B;AAGkB,gBAAA,OAAO,EAAE,CACP,eADO,EAEP,aAFO,EAGP,WAHO,EAIP,aAJO,EAKP,iBALO,EAMP,2BANO,EAOP,cAPO,EAQP,gBARO,EAUPgD,GAVO,CAUFC,IAAD,IAAU;AACd,yBAAO;AAAEhC,oBAAAA,GAAG,EAAEgC,IAAP;AAAaC,oBAAAA,IAAI,EAAED,IAAnB;AAAyB/B,oBAAAA,KAAK,EAAE+B;AAAhC,mBAAP;AACD,iBAZQ,CAH3B;AAgBkB,gBAAA,KAAK,EAAE;AACLE,kBAAAA,QAAQ,EAAE,sBADL;AAELC,kBAAAA,OAAO,EAAE;AAFJ,iBAhBzB;AAoBkB,gBAAA,WAAW,EAAEjC,IAAI,CAAC,sBAAD,CAAJ,IAAgC,sBApB/D;AAqBkB,gBAAA,MAAM,MArBxB;AAsBkB,gBAAA,QAAQ,EAAE,CAAC0B,CAAD,EAAI;AAAE3B,kBAAAA;AAAF,iBAAJ,KAAkB;AAC1BmC,kBAAAA,OAAO,CAACC,GAAR,CAAYpC,KAAZ;AACA,uBAAKF,mBAAL,CAAyB,sBAAzB,EAAiDE,KAAjD;AACD,iBAzBnB;AA0BkB,gBAAA,WAAW,EAAE;AAAEqC,kBAAAA,EAAE,EAAE;AAAN;AA1B/B;AAAA;AAAA;AAAA;AAAA,sBApCc;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAyEE,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,KAAK,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,oBAzEF,eA0EE,QAAC,IAAD,CAAM,KAAN;AAAA,qCACE,QAAC,QAAD;AACE,gBAAA,QAAQ,MADV;AAEE,gBAAA,UAAU,EAAC,SAFb;AAGE,gBAAA,QAAQ,EAAGV,CAAD,IAAO;AACf,uBAAK7B,mBAAL,CAAyB,iBAAzB,EAA4C6B,CAAC,CAACC,MAAF,CAAS5B,KAArD;AACD;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBA1EF,eAqFE,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,KAAK,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,oBArFF,eAsFE,QAAC,IAAD,CAAM,KAAN;AAAA,qCACE,QAAC,QAAD;AACE,gBAAA,QAAQ,MADV;AAEE,gBAAA,UAAU,EAAC,qBAFb;AAGE,gBAAA,QAAQ,EAAG2B,CAAD,IAAO;AACf,uBAAK7B,mBAAL,CAAyB,qBAAzB,EAAgD6B,CAAC,CAACC,MAAF,CAAS5B,KAAzD;AACD;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAtFF,eAkGE,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,KAAK,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,oBAlGF,eAmGE,QAAC,IAAD,CAAM,KAAN;AAAA,qCACE,QAAC,QAAD;AACE,gBAAA,QAAQ,MADV;AAEE,gBAAA,UAAU,EAAC,qBAFb;AAGE,gBAAA,QAAQ,EAAG2B,CAAD,IAAO;AACf,uBAAK7B,mBAAL,CAAyB,qBAAzB,EAAgD6B,CAAC,CAACC,MAAF,CAAS5B,KAAzD;AACD;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAnGF,eAiHE,QAAC,IAAD,CAAM,KAAN;AAAA,qCACE,QAAC,MAAD;AACE,gBAAA,QAAQ,MADV;AAEE,gBAAA,QAAQ,EAAE,CAAC,KAAKS,SAAL,EAFb;AAGE,gBAAA,OAAO,EAAGkB,CAAD,IAAO;AACdA,kBAAAA,CAAC,CAACW,cAAF;;AACA,sBAAI,KAAK7B,SAAL,EAAJ,EAAsB;AACpB,yBAAKG,qBAAL;AACA,yBAAKV,QAAL,CAAc;AAAEf,sBAAAA,SAAS,EAAE;AAAb,qBAAd;AACA,yBAAK4B,iBAAL;AACD;AACF,iBAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAjHF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,gBADF,eA0IE,QAAC,MAAD;AAAQ,UAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1IF,eA2IE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3IF,eA6IE,QAAC,MAAD;AACE,UAAA,QAAQ,MADV;AAEE,UAAA,OAAO,EAAGY,CAAD,IAAO;AACd,iBAAKzB,QAAL,CAAc;AACZf,cAAAA,SAAS,EAAE;AADC,aAAd;AAGD,WANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7IF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAyJE,QAAC,KAAD;AACE,QAAA,mBAAmB,EAAE,KAAKkB,mBAD5B;AAEE,QAAA,IAAI,EAAE,KAAKnB,KAAL,CAAWG;AAFnB;AAAA;AAAA;AAAA;AAAA,cAzJF,eA8JE;AAAK,QAAA,SAAS,EAAEb,MAAM,CAAC,aAAD,CAAtB;AAAA,+BACE,QAAC,MAAD,CAAQ,KAAR;AAAA,kCACE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,KAAK,EAAC,QAFR;AAGE,YAAA,OAAO,EAAGmD,CAAD,IAAO;AACdA,cAAAA,CAAC,CAACW,cAAF;AACAb,cAAAA,aAAa;AACd,aANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAWE,QAAC,MAAD,CAAQ,EAAR;AAAA;AAAA;AAAA;AAAA,kBAXF,eAYE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,QAAQ,MAFV;AAIE,YAAA,OAAO,EAAGE,CAAD,IAAO;AACdA,cAAAA,CAAC,CAACW,cAAF;;AAEA,kBAAI,IAAJ,EAAU;AACRZ,gBAAAA,eAAe,CACb,yBADa,EAEb,CAAC,GAAG,KAAKxC,KAAL,CAAWG,WAAf,CAFa,EAGb,YAHa,CAAf;AAKAmC,gBAAAA,aAAa;AACd,eAPD,MAOO,OAAO,KAAP;AACR,aAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA9JF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmMD;;AAjTwD","sourcesContent":["import React, { Component } from \"react\";\n\nimport styles from \"./Educational.module.css\";\n\nimport Modal from \"../../../utils/Modal/Modal\";\n\nimport { Header, Form, Button, TextArea, Select } from \"semantic-ui-react\";\n\nimport Table from \"./EmploymentsTable/Table\";\n\nimport {countries} from \"../../../utils/NationalityData\"\n\nexport default class PreviousEmployments extends Component {\n  state = {\n    modalOpen: false,\n    counter: 0,\n    employments: [],\n    current_emplyment: {\n      from: null,\n      to: null,\n      designation: \"\",\n      emoluments:\"\",\n      nature_of_employment:\"\",\n      details_of_employer:\"\",\n      reasons_for_leaving:\"\"\n      \n \n    },\n  };\n\n  componentDidMount() {\n    let employments_data = this.props.form;\n\n    // If some previous information exists, just initialize state to that\n\n    if (employments_data.length > 0) {\n      this.setState({ employments: [...employments_data] });\n    }\n\n    return;\n  }\n\n  handleLocalFormFill = (key, value) => {\n    let form = { ...this.state.current_emplyment };\n\n    if (value === null) {\n      return;\n    }\n\n    form[key] = value;\n    this.setState({ current_emplyment: { ...form } });\n  };\n\n  validatedMainSubmission = () => {\n    let employments = this.state.employments;\n    if (employments.length > 0) {\n      return true;\n    } else return false;\n  };\n\n  removeItemFormTable = (counter) => {\n    let employments_data = [...this.state.employments];\n\n    employments_data = employments_data.filter((member) => {\n      return member.counter !== counter;\n    });\n\n    this.setState({ employments: [...employments_data] });\n  };\n\n  validated = () => {\n    let form = this.state.current_emplyment;\n    let validated = true;\n    let fields = [\"occupation\", \"name\",\"details_of_employer_university\", \"present_address\", \"relation\",];\n\n    for (let i = 0; i < fields.length; i++) {\n      if (form[fields[i]] === \"\" || form[fields[i]] === null) {\n        validated = false;\n     \n        break;\n      }\n    }\n\n    return validated;\n  };\n\n  storeCurrentIntoArray = () => {\n    let temp = this.state.counter + 1;\n    let current = {\n      ...this.state.current_emplyment,\n      counter: this.state.counter,\n    };\n    this.setState({\n      employments: [...this.state.employments, current],\n      counter: temp,\n    });\n  };\n\n  clearExistingForm = () => {\n    let current_data = this.state.current_emplyment;\n    let fields = Object.keys(current_data);\n\n    for (let i = 0; i < fields.length; i++) {\n      current_data[fields[i]] = \"\";\n    }\n\n    current_data[\"relation\"] = null;\n\n    this.setState({ current_emplyment: { ...current_data } });\n  };\n\n  changeModal = (state) => {\n    let modal = state === \"open\" ? true : false;\n    this.setState({ modalOpen: modal });\n  };\n  render() {\n    let { incrementStep, decrementStep, handleArrayFill } = {\n      ...this.props,\n    };\n\n    let form = this.state.current_emplyment;\n\n    return (\n      <div className=\"container\">\n        <div className={styles[\"main_wrapper\"]}>\n          <Modal\n            modalState={this.state.modalOpen}\n            modalMessage=\"Add a Family Member NRI\"\n            closeModal={() => this.changeModal(\"close\")}\n          >\n            <Form>\n              <Form.Group widths=\"equal\">\n                \n\n<Form.Input\n                  type=\"date\"\n                  label=\"From\"\n                  required\n                  onChange={(e) =>\n                    this.handleLocalFormFill(\"from\", e.target.value)\n                  }\n                  value={form[\"from\"]}\n                />\n\n\n\n<Form.Input\n                  type=\"date\"\n                  label=\"To\"\n                  required\n                  onChange={(e) =>\n                    this.handleLocalFormFill(\"to\", e.target.value)\n                  }\n                  value={form[\"to\"]}\n                />\n\n                <Form.Field\n                  control={Form.Input}\n                  label=\"Designation\"\n                  name=\"designation\"\n                  required\n                  onChange={(e) => {\n                    this.handleLocalFormFill(\"designation\", e.target.value);\n                  }}\n                  value={form[\"designation\"]}\n                />\n\n<Form.Field\n                  required\n                  control={Select}\n                  options={[\n                    \"Central Govt.\",\n                    \"State Govt.\",\n                    \"Semi Govt\",\n                    \"Quasi Govt.\",\n                    \"Autonomous Body\",\n                    \"Public Sector Undertaking\",\n                    \"Private Firm\",\n                    \"Public Project\"\n                  \n                  ].map((item) => {\n                    return { key: item, text: item, value: item };\n                  })}\n                  label={{\n                    children: \"Nature of Employment\",\n                    htmlFor: \"form-select-control-nature\",\n                  }}\n                  placeholder={form[\"nature_of_employment\"] || \"Nature of Employment\"}\n                  search\n                  onChange={(e, { value }) => {\n                    console.log(value);\n                    this.handleLocalFormFill(\"nature_of_employment\", value);\n                  }}\n                  searchInput={{ id: \"form-select-control-nature\" }}\n                />\n\n                \n              </Form.Group>\n\n           \n\n              \n\n              <Form.Field label=\"Emoluments\" />\n              <Form.Group>\n                <TextArea\n                  required\n                  placeholer=\"Address\"\n                  onChange={(e) => {\n                    this.handleLocalFormFill(\"present_address\", e.target.value);\n                  }}\n                />\n\n              </Form.Group>\n\n              <Form.Field label=\"Details of Employer\" />\n              <Form.Group>\n                <TextArea\n                  required\n                  placeholer=\"Details of Employer\"\n                  onChange={(e) => {\n                    this.handleLocalFormFill(\"details_of_employer\", e.target.value);\n                  }}\n                />\n\n              </Form.Group>\n\n\n              <Form.Field label=\"Reasons for Leaving previous Service\" />\n              <Form.Group>\n                <TextArea\n                  required\n                  placeholer=\"Details of Employer\"\n                  onChange={(e) => {\n                    this.handleLocalFormFill(\"details_of_employer\", e.target.value);\n                  }}\n                />\n\n              </Form.Group>\n\n\n              \n\n              <Form.Group>\n                <Button\n                  positive\n                  disabled={!this.validated()}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    if (this.validated()) {\n                      this.storeCurrentIntoArray();\n                      this.setState({ modalOpen: false });\n                      this.clearExistingForm();\n                    }\n                  }}\n                >\n                  Add Family Member\n                </Button>\n              </Form.Group>\n            </Form>\n          </Modal>\n\n          <Header as=\"h2\">26. Particulars of Previous Employments</Header>\n          <p>Details of previous employments under central or state Government or state Government or a semi Government or a Quasi Government body or an autonomous bodu or a Public Sector undertaking or a Private Firm or Public Projects:</p>\n\n          <Button\n            positive\n            onClick={(e) => {\n              this.setState({\n                modalOpen: true,\n              });\n            }}\n          >\n            Add Child Detail\n          </Button>\n        </div>\n        <Table\n          removeItemFormTable={this.removeItemFormTable}\n          data={this.state.employments}\n        />\n\n        <div className={styles[\"btn_wrapper\"]}>\n          <Button.Group>\n            <Button\n              size=\"medium\"\n              color=\"yellow\"\n              onClick={(e) => {\n                e.preventDefault();\n                decrementStep();\n              }}\n            >\n              BACK: (24). NRI FAMILY\n            </Button>\n            <Button.Or />\n            <Button\n              size=\"medium\"\n              positive\n            \n              onClick={(e) => {\n                e.preventDefault();\n\n                if (true) {\n                  handleArrayFill(\n                    \"particulars_information\",\n                    [...this.state.employments],\n                    \"nri_family\"\n                  );\n                  incrementStep();\n                } else return false;\n              }}\n            >\n              26 PREVIOUS EMPLOYMENT: NEXT\n            </Button>\n          </Button.Group>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}