{"ast":null,"code":"var _jsxFileName = \"/home/hyder/Desktop/Form_Project/client/src/components/Particulars/Places/Places.js\";\nimport React, { Component } from \"react\";\nimport styles from \"./Educational.module.css\";\nimport Modal from \"../../../utils/Modal/Modal\";\nimport { Header, Form, Button, TextArea, Select } from \"semantic-ui-react\";\nimport Table from \"./PlacesTable/Table\";\nimport { countries } from \"../../../utils/NationalityData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Places extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modalOpen: false,\n      counter: 0,\n      places: [],\n      current_place: {\n        country: null,\n        place: \"\",\n        period_of_stay: \"\",\n        additional_info: \"\"\n      }\n    };\n\n    this.handleLocalFormFill = (key, value) => {\n      let form = { ...this.state.current_place\n      };\n\n      if (value === null) {\n        return;\n      }\n\n      form[key] = value;\n      this.setState({\n        current_place: { ...form\n        }\n      });\n    };\n\n    this.validatedMainSubmission = () => {\n      let places = this.state.places;\n\n      if (places.length > 0) {\n        return true;\n      } else return false;\n    };\n\n    this.removeItemFormTable = counter => {\n      let places_data = [...this.state.places];\n      places_data = places_data.filter(member => {\n        return member.counter !== counter;\n      });\n      this.setState({\n        places: [...places_data]\n      });\n    };\n\n    this.validated = () => {\n      let form = this.state.current_place;\n      let validated = true;\n      let fields = [\"country\", \"place\", \"period_of_stay\", \"additional_info\"];\n\n      for (let i = 0; i < fields.length; i++) {\n        if (form[fields[i]] === \"\" || form[fields[i]] === null) {\n          validated = false;\n          break;\n        }\n      }\n\n      return validated;\n    };\n\n    this.storeCurrentIntoArray = () => {\n      let temp = this.state.counter + 1;\n      let current = { ...this.state.current_place,\n        counter: this.state.counter\n      };\n      this.setState({\n        places: [...this.state.places, current],\n        counter: temp\n      });\n    };\n\n    this.clearExistingForm = () => {\n      let current_data = this.state.current_place;\n      let fields = Object.keys(current_data);\n\n      for (let i = 0; i < fields.length; i++) {\n        current_data[fields[i]] = \"\";\n      }\n\n      current_data[\"country\"] = null;\n      this.setState({\n        current_place: { ...current_data\n        }\n      });\n    };\n\n    this.changeModal = state => {\n      let modal = state === \"open\" ? true : false;\n      this.setState({\n        modalOpen: modal\n      });\n    };\n  }\n\n  componentDidMount() {\n    let places_data = this.props.form; // If some previous information exists, just initialize state to that\n\n    if (places_data.length > 0) {\n      this.setState({\n        places: [...places_data]\n      });\n    }\n\n    return;\n  }\n\n  render() {\n    let {\n      incrementStep,\n      decrementStep,\n      handleArrayFill\n    } = { ...this.props\n    };\n    let form = this.state.current_place;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"main_wrapper\"],\n        children: [/*#__PURE__*/_jsxDEV(Modal, {\n          modalState: this.state.modalOpen,\n          modalMessage: \"Particulars of Places\",\n          closeModal: () => this.changeModal(\"close\"),\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              widths: \"equal\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n                required: true,\n                control: Select,\n                options: countries.map(country => {\n                  return {\n                    key: country.name,\n                    text: country.name,\n                    value: country.name\n                  };\n                }),\n                label: {\n                  children: \"Country\",\n                  htmlFor: \"form-select-control-country\"\n                },\n                placeholder: form[\"country\"] || \"Country\",\n                search: true,\n                onChange: (e, {\n                  value\n                }) => {\n                  console.log(value);\n                  this.handleLocalFormFill(\"country\", value);\n                },\n                searchInput: {\n                  id: \"form-select-control-relation\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                control: Form.Input,\n                label: \"Place\",\n                name: \"place\",\n                required: true,\n                onChange: e => {\n                  this.handleLocalFormFill(\"place\", e.target.value);\n                },\n                value: form[\"place\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                control: Form.Input,\n                label: \"Occupation\",\n                name: \"occupation\",\n                required: true,\n                onChange: e => {\n                  this.handleLocalFormFill(\"occupation\", e.target.value);\n                },\n                value: form[\"occupation\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              label: \"Additional Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Full Address including [Village,Police Station,Post Office,Town,House,Street No,Contact,etc]\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(TextArea, {\n                required: true,\n                placeholer: \"Address\",\n                onChange: e => {\n                  this.handleLocalFormFill(\"additional_info\", e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                positive: true,\n                disabled: !this.validated(),\n                onClick: e => {\n                  e.preventDefault();\n\n                  if (this.validated()) {\n                    this.storeCurrentIntoArray();\n                    this.setState({\n                      modalOpen: false\n                    });\n                    this.clearExistingForm();\n                  }\n                },\n                children: \"Add InLaw Member\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Header, {\n          as: \"h2\",\n          children: \"19. Particulars of Places\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Particulars of places (with a period of stay) where you have resided for more than one year at a time during the preceeding 5 years. In case of stay abroad (including Pakistan/PoK), particulars of all places where you have resided for more than one year after attaining the age of 18 years.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          positive: true,\n          onClick: e => {\n            this.setState({\n              modalOpen: true\n            });\n          },\n          children: \"Add InLaw Member\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        removeItemFormTable: this.removeItemFormTable,\n        data: this.state.places\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"btn_wrapper\"],\n        children: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"medium\",\n            color: \"yellow\",\n            onClick: e => {\n              e.preventDefault();\n              decrementStep();\n            },\n            children: \"BACK: (15). FAMILY INFO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button.Or, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"medium\",\n            positive: true,\n            disabled: !this.validatedMainSubmission(),\n            onClick: e => {\n              e.preventDefault();\n\n              if (this.validatedMainSubmission()) {\n                handleArrayFill(\"particulars_information\", [...this.state.mobile_numbers], \"places\");\n              } else return false;\n            },\n            children: \"(17). CLOSE RELATIVES INFO: NEXT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/hyder/Desktop/Form_Project/client/src/components/Particulars/Places/Places.js"],"names":["React","Component","styles","Modal","Header","Form","Button","TextArea","Select","Table","countries","Places","state","modalOpen","counter","places","current_place","country","place","period_of_stay","additional_info","handleLocalFormFill","key","value","form","setState","validatedMainSubmission","length","removeItemFormTable","places_data","filter","member","validated","fields","i","storeCurrentIntoArray","temp","current","clearExistingForm","current_data","Object","keys","changeModal","modal","componentDidMount","props","render","incrementStep","decrementStep","handleArrayFill","map","name","text","children","htmlFor","e","console","log","id","Input","target","preventDefault","mobile_numbers"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport styles from \"./Educational.module.css\";\n\nimport Modal from \"../../../utils/Modal/Modal\";\n\nimport { Header, Form, Button, TextArea, Select } from \"semantic-ui-react\";\n\nimport Table from \"./PlacesTable/Table\";\n\nimport {countries} from \"../../../utils/NationalityData\"\n\nexport default class Places extends Component {\n  state = {\n    modalOpen: false,\n    counter: 0,\n    places: [],\n    current_place: {\n      country: null,\n      place: \"\",\n      period_of_stay: \"\",\n      additional_info: \"\",\n    },\n  };\n\n  componentDidMount() {\n    let places_data = this.props.form;\n\n    // If some previous information exists, just initialize state to that\n\n    if (places_data.length > 0) {\n      this.setState({ places: [...places_data] });\n    }\n\n    return;\n  }\n\n  handleLocalFormFill = (key, value) => {\n    let form = { ...this.state.current_place };\n\n    if (value === null) {\n      return;\n    }\n\n    form[key] = value;\n    this.setState({ current_place: { ...form } });\n  };\n\n  validatedMainSubmission = () => {\n    let places = this.state.places;\n    if (places.length > 0) {\n      return true;\n    } else return false;\n  };\n\n  removeItemFormTable = (counter) => {\n    let places_data = [...this.state.places];\n\n    places_data = places_data.filter((member) => {\n      return member.counter !== counter;\n    });\n\n    this.setState({ places: [...places_data] });\n  };\n\n  validated = () => {\n    let form = this.state.current_place;\n    let validated = true;\n    let fields = [\"country\", \"place\", \"period_of_stay\", \"additional_info\"];\n\n    for (let i = 0; i < fields.length; i++) {\n      if (form[fields[i]] === \"\" || form[fields[i]] === null) {\n        validated = false;\n        break;\n      }\n    }\n\n    return validated;\n  };\n\n  storeCurrentIntoArray = () => {\n    let temp = this.state.counter + 1;\n    let current = {\n      ...this.state.current_place,\n      counter: this.state.counter,\n    };\n    this.setState({\n      places: [...this.state.places, current],\n      counter: temp,\n    });\n  };\n\n  clearExistingForm = () => {\n    let current_data = this.state.current_place;\n    let fields = Object.keys(current_data);\n\n    for (let i = 0; i < fields.length; i++) {\n      current_data[fields[i]] = \"\";\n    }\n\n    current_data[\"country\"] = null;\n\n    this.setState({ current_place: { ...current_data } });\n  };\n\n  changeModal = (state) => {\n    let modal = state === \"open\" ? true : false;\n    this.setState({ modalOpen: modal });\n  };\n  render() {\n    let { incrementStep, decrementStep, handleArrayFill } = {\n      ...this.props,\n    };\n\n    let form = this.state.current_place;\n\n    return (\n      <div className=\"container\">\n        <div className={styles[\"main_wrapper\"]}>\n          <Modal\n            modalState={this.state.modalOpen}\n            modalMessage=\"Particulars of Places\"\n            closeModal={() => this.changeModal(\"close\")}\n          >\n            <Form>\n              <Form.Group widths=\"equal\">\n                <Form.Field\n                  required\n                  control={Select}\n                  options={countries.map((country) => {\n                    return { key: country.name, text: country.name, value: country.name };\n                  })}\n                  label={{\n                    children: \"Country\",\n                    htmlFor: \"form-select-control-country\",\n                  }}\n                  placeholder={form[\"country\"] || \"Country\"}\n                  search\n                  onChange={(e, { value }) => {\n                    console.log(value);\n                    this.handleLocalFormFill(\"country\", value);\n                  }}\n                  searchInput={{ id: \"form-select-control-relation\" }}\n                />\n                <Form.Field\n                  control={Form.Input}\n                  label=\"Place\"\n                  name=\"place\"\n                  required\n                  onChange={(e) => {\n                    this.handleLocalFormFill(\"place\", e.target.value);\n                  }}\n                  value={form[\"place\"]}\n                />\n\n                <Form.Field\n                  control={Form.Input}\n                  label=\"Occupation\"\n                  name=\"occupation\"\n                  required\n                  onChange={(e) => {\n                    this.handleLocalFormFill(\"occupation\", e.target.value);\n                  }}\n                  value={form[\"occupation\"]}\n                />\n              </Form.Group>\n\n              <Form.Field label=\"Additional Information\" />\n              <p>Full Address including [Village,Police Station,Post Office,Town,House,Street No,Contact,etc]</p>\n              <Form.Group>\n                <TextArea\n                  required\n                  placeholer=\"Address\"\n                  onChange={(e) => {\n                    this.handleLocalFormFill(\"additional_info\", e.target.value);\n                  }}\n                />\n              </Form.Group>\n\n              <Form.Group>\n                <Button\n                  positive\n                  disabled={!this.validated()}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    if (this.validated()) {\n                      this.storeCurrentIntoArray();\n                      this.setState({ modalOpen: false });\n                      this.clearExistingForm();\n                    }\n                  }}\n                >\n                  Add InLaw Member\n                </Button>\n              </Form.Group>\n            </Form>\n          </Modal>\n\n          <Header as=\"h2\">19. Particulars of Places</Header>\n          <h3>\n            Particulars of places (with a period of stay) where you have resided for more than one year at a time during the preceeding 5 years. In case of stay abroad (including Pakistan/PoK), particulars of all places where you have resided for more than one year after attaining the age of 18 years.\n          </h3>\n\n          <Button\n            positive\n            onClick={(e) => {\n              this.setState({\n                modalOpen: true,\n              });\n            }}\n          >\n            Add InLaw Member\n          </Button>\n        </div>\n        <Table\n          removeItemFormTable={this.removeItemFormTable}\n          data={this.state.places}\n        />\n\n        <div className={styles[\"btn_wrapper\"]}>\n          <Button.Group>\n            <Button\n              size=\"medium\"\n              color=\"yellow\"\n              onClick={(e) => {\n                e.preventDefault();\n                decrementStep();\n              }}\n            >\n              BACK: (15). FAMILY INFO\n            </Button>\n            <Button.Or />\n            <Button\n              size=\"medium\"\n              positive\n              disabled={!this.validatedMainSubmission()}\n              onClick={(e) => {\n                e.preventDefault();\n\n                if (this.validatedMainSubmission()) {\n                  handleArrayFill(\n                    \"particulars_information\",\n                    [...this.state.mobile_numbers],\n                    \"places\"\n                  );\n                } else return false;\n              }}\n            >\n              (17). CLOSE RELATIVES INFO: NEXT\n            </Button>\n          </Button.Group>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}