{"ast":null,"code":"var _jsxFileName = \"/home/hyder/Desktop/JAKEGA_FORM/client/src/components/Personal_Info/PersonalInfo.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Header, Form, Button, Modal, Select } from \"semantic-ui-react\";\nimport styles from \"./Personal.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function General({\n  handleFormFill,\n  form,\n  incrementStep,\n  decrementStep\n}) {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [modalMessage, setModalMessgae] = React.useState(\"\");\n\n  function validateInputs(form) {\n    console.log(form);\n    let validated = true;\n    let errorMessgae = \"\";\n    let fields = [\"first_name\", \"last_name\", \"middle_name\", \"sex\", \"category\", \"blood_group\"];\n    fields.forEach(field => {\n      if (form[field] === \"\" || form[field] === undefined || form[field] === null) {\n        validated = false;\n        errorMessgae = `Invalid Input field: ${field}`;\n      }\n    });\n\n    if (!validated) {\n      setModalMessgae(errorMessgae);\n      setOpen(true);\n      return false;\n    }\n\n    return true;\n  }\n\n  const genderOptions = [{\n    key: \"m\",\n    text: \"Male\",\n    value: \"male\"\n  }, {\n    key: \"f\",\n    text: \"Female\",\n    value: \"female\"\n  }, {\n    key: \"o\",\n    text: \"Other\",\n    value: \"other\"\n  }];\n  const bloodGroupOptions = [{\n    key: \"A+\",\n    text: \"A RhD positive (A+)\",\n    value: \"A+\"\n  }, {\n    key: \"A-\",\n    text: \"A RhD negative (A-)\",\n    value: \"A-\"\n  }, {\n    key: \"B+\",\n    text: \"B RhD positive(B+)\",\n    value: \"B+\"\n  }, {\n    key: \"B-\",\n    text: \"B RhD negative (B-)\",\n    value: \"B-\"\n  }, {\n    key: \"O-\",\n    text: \"O RhD negative (O-)\",\n    value: \"O-\"\n  }, {\n    key: \"O+\",\n    text: \"O RhD positive (O-)\",\n    value: \"O+\"\n  }, {\n    key: \"AB-\",\n    text: \"AB RhD negative (AB-)\",\n    value: \"AB-\"\n  }, {\n    key: \"AB+\",\n    text: \"AB RhD positive (AB+)\",\n    value: \"AB+\"\n  }];\n  const categoryOptions = [{\n    key: \"om\",\n    text: \"OPEN MERIT \",\n    value: \"om\"\n  }, {\n    key: \"sc\",\n    text: \"SC\tSCHEDULED CASTES\",\n    value: \"sc\"\n  }, {\n    key: \"stgp\",\n    text: \"SCHEDULED TRIBE, GUJJAR AND BAKERWAL\",\n    value: \"stgp\"\n  }, {\n    key: \"osc\",\n    text: \"WEAK AND UNDER PRIVILEGED CLASSES/SOCIAL CASTES\",\n    value: \"osc\"\n  }, {\n    key: \"rba\",\n    text: \"RESIDENTS OF BACKWARD AREA\",\n    value: \"rba\"\n  }, {\n    key: \"alc\",\n    text: \"RESIDENTS OF AREA ADJOINING ACTUAL LINE OF CONTROL \",\n    value: \"alc\"\n  }, {\n    key: \"sp\",\n    text: \"PROFICIENCY IN SPORTS\",\n    value: \"sp\"\n  }, {\n    key: \"ews\",\n    text: \"ECONOMICALLY WEAKER SECTION\",\n    value: \"ews\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"main_wrapper\"],\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        centered: false,\n        open: open,\n        onClose: () => setOpen(false),\n        onOpen: () => setOpen(true),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: \"Please Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n          children: /*#__PURE__*/_jsxDEV(Modal.Description, {\n            children: modalMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setOpen(false),\n            children: \"OK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        className: styles[\"heading\"],\n        as: \"h2\",\n        children: \"2. Personal Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          widths: \"equal\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Form.Input,\n            label: \"First Name\",\n            name: \"first_name\",\n            required: true,\n            onChange: e => {\n              handleFormFill(\"personal_information\", \"first_name\", e.target.value);\n            },\n            value: form[\"first_name\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Form.Input,\n            label: \"Middle Name\",\n            name: \"middle_name\",\n            required: true,\n            onChange: e => {\n              handleFormFill(\"personal_information\", \"middle_name\", e.target.value);\n            },\n            value: form[\"middle_name\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Form.Input,\n            label: \"Last Name\",\n            name: \"last_name\",\n            required: true,\n            onChange: e => {\n              handleFormFill(\"personal_information\", \"last_name\", e.target.value);\n            },\n            value: form[\"last_name\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          widths: \"equal\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            required: true,\n            control: Select,\n            options: genderOptions,\n            label: {\n              children: \"Gender / Sex\",\n              htmlFor: \"form-select-control-gender\"\n            },\n            placeholder: form[\"sex\"] || \"Gender\",\n            onChange: (e, {\n              value\n            }) => {\n              handleFormFill(\"personal_information\", \"sex\", value);\n            },\n            searchInput: {\n              id: \"form-select-control-gender\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            required: true,\n            control: Select,\n            options: categoryOptions,\n            label: {\n              children: \"Category\",\n              htmlFor: \"form-select-control-category\"\n            },\n            placeholder: form[\"category\"] || \"Category\",\n            search: true,\n            onChange: (e, {\n              value\n            }) => {\n              handleFormFill(\"personal_information\", \"category\", value);\n            },\n            searchInput: {\n              id: \"form-select-control-category\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            required: true,\n            control: Select,\n            options: bloodGroupOptions,\n            label: {\n              children: \"Blood Group\",\n              htmlFor: \"form-select-control-blood\"\n            },\n            placeholder: form[\"blood_group\"] || \"Blood Group\",\n            onChange: (e, {\n              value\n            }) => {\n              handleFormFill(\"personal_information\", \"blood_group\", value);\n            },\n            searchInput: {\n              id: \"form-select-control-blood\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          widths: \"equal\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Form.Input,\n            label: \"Alias Name (if any)\",\n            name: \"alias_name\",\n            onChange: e => {\n              handleFormFill(\"personal_information\", \"alias\", e.target.value);\n            },\n            value: form[\"alias\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Form.Input,\n            label: \"Birth Name (if different than actual, any other names used at any stage)\",\n            name: \"birth_name\",\n            onChange: e => {\n              handleFormFill(\"personal_information\", \"alias\", e.target.value);\n            },\n            value: form[\"birth_name\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"btn_wrapper\"],\n          children: /*#__PURE__*/_jsxDEV(Button.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              size: \"large\",\n              color: \"yellow\",\n              onClick: e => {\n                decrementStep();\n              },\n              children: \"BACK: 1. GENERAL INFO\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button.Or, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"large\",\n              positive: true,\n              onClick: e => {\n                e.preventDefault(); //CHECK VALIDATION BEFORE SUBMIT\n\n                if (validateInputs(form)) {\n                  incrementStep();\n                }\n              },\n              children: \"3. ADDRESS INFO : NEXT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(General, \"wy+5Xx1a/Pk505tdfQK2pY79bYo=\");\n\n_c = General;\n\nvar _c;\n\n$RefreshReg$(_c, \"General\");","map":{"version":3,"sources":["/home/hyder/Desktop/JAKEGA_FORM/client/src/components/Personal_Info/PersonalInfo.js"],"names":["React","Header","Form","Button","Modal","Select","styles","General","handleFormFill","form","incrementStep","decrementStep","open","setOpen","useState","modalMessage","setModalMessgae","validateInputs","console","log","validated","errorMessgae","fields","forEach","field","undefined","genderOptions","key","text","value","bloodGroupOptions","categoryOptions","Input","e","target","children","htmlFor","id","preventDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Header, Form, Button, Modal, Select } from \"semantic-ui-react\";\nimport styles from \"./Personal.module.css\";\n\nexport default function General({ handleFormFill, form ,incrementStep , decrementStep }) {\n  const [open, setOpen] = React.useState(false);\n  const [modalMessage, setModalMessgae] = React.useState(\"\");\n\n  function validateInputs(form) {\n    console.log(form);\n\n    let validated = true;\n    let errorMessgae = \"\";\n    let fields = [\"first_name\", \"last_name\", \"middle_name\", \"sex\", \"category\",\"blood_group\"];\n\n    fields.forEach((field) => {\n      if (form[field] === \"\" || form[field] === undefined || form[field] === null) {\n        validated = false;\n        errorMessgae = `Invalid Input field: ${field}`;\n      }\n    });\n\n    \n\n    if (!validated) {\n      setModalMessgae(errorMessgae);\n      setOpen(true);\n      return false\n    }\n\n    return true;\n  }\n\n  const genderOptions = [\n    { key: \"m\", text: \"Male\", value: \"male\" },\n    { key: \"f\", text: \"Female\", value: \"female\" },\n    { key: \"o\", text: \"Other\", value: \"other\" },\n  ];\n\n  const bloodGroupOptions = [\n    { key: \"A+\", text: \"A RhD positive (A+)\", value: \"A+\" },\n    { key: \"A-\", text: \"A RhD negative (A-)\", value: \"A-\" },\n    { key: \"B+\", text: \"B RhD positive(B+)\", value: \"B+\" },\n    { key: \"B-\", text: \"B RhD negative (B-)\", value: \"B-\" },\n    { key: \"O-\", text: \"O RhD negative (O-)\", value: \"O-\" },\n    { key: \"O+\", text: \"O RhD positive (O-)\", value: \"O+\" },\n    { key: \"AB-\", text: \"AB RhD negative (AB-)\", value: \"AB-\" },\n    { key: \"AB+\", text: \"AB RhD positive (AB+)\", value: \"AB+\" },\n  ];\n\n  const categoryOptions = [\n    { key: \"om\", text: \"OPEN MERIT \", value: \"om\" },\n    { key: \"sc\", text: \"SC\tSCHEDULED CASTES\", value: \"sc\" },\n    {\n      key: \"stgp\",\n      text: \"SCHEDULED TRIBE, GUJJAR AND BAKERWAL\",\n      value: \"stgp\",\n    },\n    {\n      key: \"osc\",\n      text: \"WEAK AND UNDER PRIVILEGED CLASSES/SOCIAL CASTES\",\n      value: \"osc\",\n    },\n    { key: \"rba\", text: \"RESIDENTS OF BACKWARD AREA\", value: \"rba\" },\n    {\n      key: \"alc\",\n      text: \"RESIDENTS OF AREA ADJOINING ACTUAL LINE OF CONTROL \",\n      value: \"alc\",\n    },\n    { key: \"sp\", text: \"PROFICIENCY IN SPORTS\", value: \"sp\" },\n    { key: \"ews\", text: \"ECONOMICALLY WEAKER SECTION\", value: \"ews\" },\n  ];\n\n  return (\n    <div className=\"container\">\n      <div className={styles[\"main_wrapper\"]}>\n        <Modal\n          centered={false}\n          open={open}\n          onClose={() => setOpen(false)}\n          onOpen={() => setOpen(true)}\n        >\n          <Modal.Header>Please Note</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>{modalMessage}</Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => setOpen(false)}>OK</Button>\n          </Modal.Actions>\n        </Modal>\n        <Header className={styles[\"heading\"]} as=\"h2\">\n          2. Personal Information\n        </Header>\n        <Form>\n          <Form.Group widths=\"equal\">\n            <Form.Field\n              control={Form.Input}\n              label=\"First Name\"\n              name=\"first_name\"\n              required\n              onChange={(e) => {\n                handleFormFill(\n                  \"personal_information\",\n                  \"first_name\",\n                  e.target.value\n                );\n              }}\n              value={form[\"first_name\"]}\n            />\n            <Form.Field\n              control={Form.Input}\n              label=\"Middle Name\"\n              name=\"middle_name\"\n              required\n              onChange={(e) => {\n                handleFormFill(\n                  \"personal_information\",\n                  \"middle_name\",\n                  e.target.value\n                );\n              }}\n              value={form[\"middle_name\"]}\n            />\n            <Form.Field\n              control={Form.Input}\n              label=\"Last Name\"\n              name=\"last_name\"\n              required\n              onChange={(e) => {\n                handleFormFill(\n                  \"personal_information\",\n                  \"last_name\",\n                  e.target.value\n                );\n              }}\n              value={form[\"last_name\"]}\n            />\n          </Form.Group>\n          <Form.Group widths=\"equal\">\n            <Form.Field\n              required\n              control={Select}\n              options={genderOptions}\n              label={{\n                children: \"Gender / Sex\",\n                htmlFor: \"form-select-control-gender\",\n              }}\n              placeholder={ form[\"sex\"] || \"Gender\"}\n              onChange={(e, { value }) => {\n                handleFormFill(\"personal_information\", \"sex\", value);\n              }}\n              searchInput={{ id: \"form-select-control-gender\" }}\n            />\n            <Form.Field\n              required\n              control={Select}\n              options={categoryOptions}\n              label={{\n                children: \"Category\",\n                htmlFor: \"form-select-control-category\",\n              }}\n              placeholder={ form[\"category\"] || \"Category\"}\n              search\n              onChange={(e, { value }) => {\n                handleFormFill(\"personal_information\", \"category\", value);\n              }}\n              searchInput={{ id: \"form-select-control-category\" }}\n            />\n\n            <Form.Field\n              required\n              control={Select}\n              options={bloodGroupOptions}\n              label={{\n                children: \"Blood Group\",\n                htmlFor: \"form-select-control-blood\",\n              }}\n              placeholder={ form[\"blood_group\"] || \"Blood Group\"}\n              onChange={(e, { value }) => {\n                handleFormFill(\"personal_information\", \"blood_group\", value);\n              }}\n              searchInput={{ id: \"form-select-control-blood\" }}\n            />\n          </Form.Group>\n\n          <Form.Group widths=\"equal\">\n            <Form.Field\n              control={Form.Input}\n              label=\"Alias Name (if any)\"\n              name=\"alias_name\"\n              onChange={(e) => {\n                handleFormFill(\"personal_information\", \"alias\", e.target.value);\n              }}\n              value={form[\"alias\"]}\n            />\n\n            <Form.Field\n              control={Form.Input}\n              label=\"Birth Name (if different than actual, any other names used at any stage)\"\n              name=\"birth_name\"\n              onChange={(e) => {\n                handleFormFill(\"personal_information\", \"alias\", e.target.value);\n              }}\n              value={form[\"birth_name\"]}\n            />\n          </Form.Group>\n          <div className={styles[\"btn_wrapper\"]}>\n            <Button.Group>\n              <Button size=\"large\" color=\"yellow\" onClick={e=>{\n                  decrementStep()\n              }}>\n                BACK: 1. GENERAL INFO\n              </Button>\n              <Button.Or />\n              <Button size=\"large\" positive onClick={e=>{\n                  e.preventDefault()\n                  \n                  //CHECK VALIDATION BEFORE SUBMIT\n\n                  if(validateInputs(form)){\n                      incrementStep()\n                  }\n              }}>\n                 3. ADDRESS INFO : NEXT\n              </Button>\n            </Button.Group>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}