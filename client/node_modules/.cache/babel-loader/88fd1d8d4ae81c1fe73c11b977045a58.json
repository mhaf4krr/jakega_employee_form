{"ast":null,"code":"var _jsxFileName = \"/home/hyder/Desktop/JAKEGA_FORM/client/src/components/Personal_Info/PersonalInfo.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Header, Form, Button, Modal, Select } from \"semantic-ui-react\";\nimport styles from \"./Personal.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function General({\n  handleFormFill,\n  form\n}) {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [modalMessage, setModalMessgae] = React.useState(\"\");\n\n  function validateInputs(form) {\n    console.log(form);\n    let validated = true;\n    let errorMessgae = \"\";\n    let fields = [\"name\", \"present_department\", \"designation\", \"employee_id\"];\n    fields.forEach(field => {\n      if (form[field] === \"\" || form[field] === undefined) {\n        validated = false;\n        errorMessgae = `Invalid Input field: ${field}`;\n      }\n    });\n\n    if (form[\"photo\"] === null) {\n      validated = false;\n      errorMessgae = `Please upload a proper photograph`;\n    }\n\n    if (!validated) {\n      setModalMessgae(errorMessgae);\n      setOpen(true);\n    }\n\n    return true;\n  }\n\n  const genderOptions = [{\n    key: \"m\",\n    text: \"Male\",\n    value: \"male\"\n  }, {\n    key: \"f\",\n    text: \"Female\",\n    value: \"female\"\n  }, {\n    key: \"o\",\n    text: \"Other\",\n    value: \"other\"\n  }];\n  const categoryOptions = [{\n    key: \"om\",\n    text: \"OPEN MERIT \",\n    value: \"om\"\n  }, {\n    key: \"sc\",\n    text: \"SC\tSCHEDULED CASTES\",\n    value: \"sc\"\n  }, {\n    key: \"stgp\",\n    text: \"SCHEDULED TRIBE, GUJJAR AND BAKERWAL\",\n    value: \"stgp\"\n  }, {\n    key: \"osc\",\n    text: \"WEAK AND UNDER PRIVILEGED CLASSES/SOCIAL CASTES\",\n    value: \"osc\"\n  }, {\n    key: \"rba\",\n    text: \"RESIDENTS OF BACKWARD AREA\",\n    value: \"rba\"\n  }, {\n    key: \"alc\",\n    text: \"RESIDENTS OF AREA ADJOINING ACTUAL LINE OF CONTROL \",\n    value: \"alc\"\n  }, {\n    key: \"sp\",\n    text: \"PROFICIENCY IN SPORTS\",\n    value: \"sp\"\n  }, {\n    key: \"ews\",\n    text: \"ECONOMICALLY WEAKER SECTION\",\n    value: \"ews\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"main_wrapper\"],\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        centered: false,\n        open: open,\n        onClose: () => setOpen(false),\n        onOpen: () => setOpen(true),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: \"Please Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n          children: /*#__PURE__*/_jsxDEV(Modal.Description, {\n            children: modalMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setOpen(false),\n            children: \"OK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        className: styles[\"heading\"],\n        as: \"h2\",\n        children: \"2. Personal Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          widths: \"equal\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Form.Input,\n            label: \"First Name\",\n            name: \"first_name\",\n            required: true,\n            onChange: e => {\n              handleFormFill(\"personal_information\", \"first_name\", e.target.value);\n            },\n            value: form[\"name\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Form.Input,\n            label: \"Middle Name\",\n            name: \"middle_name\",\n            required: true,\n            onChange: e => {\n              handleFormFill(\"personal_information\", \"middle_name\", e.target.value);\n            },\n            value: form[\"name\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Form.Input,\n            label: \"Last Name\",\n            name: \"last_name\",\n            required: true,\n            onChange: e => {\n              handleFormFill(\"personal_information\", \"last_name\", e.target.value);\n            },\n            value: form[\"name\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          widths: \"equal\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            required: true,\n            control: Select,\n            options: genderOptions,\n            label: {\n              children: \"Gender / Sex\",\n              htmlFor: \"form-select-control-gender\"\n            },\n            placeholder: \"Gender\",\n            onChange: (e, {\n              value\n            }) => {\n              handleFormFill(\"personal_information\", \"sex\", value);\n            },\n            searchInput: {\n              id: \"form-select-control-gender\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            required: true,\n            control: Select,\n            options: categoryOptions,\n            label: {\n              children: \"Category\",\n              htmlFor: \"form-select-control-category\"\n            },\n            placeholder: \"Category\",\n            onChange: (e, {\n              value\n            }) => {\n              handleFormFill(\"personal_information\", \"category\", value);\n            },\n            searchInput: {\n              id: \"form-select-control-gender\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"btn_wrapper\"],\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"big\",\n            content: \"NEXT : Personal Details\",\n            onClick: () => {\n              validateInputs(form);\n            },\n            color: \"green\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(General, \"wy+5Xx1a/Pk505tdfQK2pY79bYo=\");\n\n_c = General;\n\nvar _c;\n\n$RefreshReg$(_c, \"General\");","map":{"version":3,"sources":["/home/hyder/Desktop/JAKEGA_FORM/client/src/components/Personal_Info/PersonalInfo.js"],"names":["React","Header","Form","Button","Modal","Select","styles","General","handleFormFill","form","open","setOpen","useState","modalMessage","setModalMessgae","validateInputs","console","log","validated","errorMessgae","fields","forEach","field","undefined","genderOptions","key","text","value","categoryOptions","Input","e","target","children","htmlFor","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,EAA+BC,KAA/B,EAAsCC,MAAtC,QAAoD,mBAApD;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;AAEA,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAjB,EAA2C;AAAA;;AACxD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,KAAK,CAACY,QAAN,CAAe,KAAf,CAAxB;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCd,KAAK,CAACY,QAAN,CAAe,EAAf,CAAxC;;AAEA,WAASG,cAAT,CAAwBN,IAAxB,EAA8B;AAC5BO,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AAEA,QAAIS,SAAS,GAAG,IAAhB;AACA,QAAIC,YAAY,GAAG,EAAnB;AACA,QAAIC,MAAM,GAAG,CAAC,MAAD,EAAS,oBAAT,EAA+B,aAA/B,EAA8C,aAA9C,CAAb;AAEAA,IAAAA,MAAM,CAACC,OAAP,CAAgBC,KAAD,IAAW;AACxB,UAAIb,IAAI,CAACa,KAAD,CAAJ,KAAgB,EAAhB,IAAsBb,IAAI,CAACa,KAAD,CAAJ,KAAgBC,SAA1C,EAAqD;AACnDL,QAAAA,SAAS,GAAG,KAAZ;AACAC,QAAAA,YAAY,GAAI,wBAAuBG,KAAM,EAA7C;AACD;AACF,KALD;;AAOA,QAAIb,IAAI,CAAC,OAAD,CAAJ,KAAkB,IAAtB,EAA4B;AAC1BS,MAAAA,SAAS,GAAG,KAAZ;AACAC,MAAAA,YAAY,GAAI,mCAAhB;AACD;;AAED,QAAI,CAACD,SAAL,EAAgB;AACdJ,MAAAA,eAAe,CAACK,YAAD,CAAf;AACAR,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD;;AAED,WAAO,IAAP;AACD;;AAED,QAAMa,aAAa,GAAG,CACpB;AAAEC,IAAAA,GAAG,EAAE,GAAP;AAAYC,IAAAA,IAAI,EAAE,MAAlB;AAA0BC,IAAAA,KAAK,EAAE;AAAjC,GADoB,EAEpB;AAAEF,IAAAA,GAAG,EAAE,GAAP;AAAYC,IAAAA,IAAI,EAAE,QAAlB;AAA4BC,IAAAA,KAAK,EAAE;AAAnC,GAFoB,EAGpB;AAAEF,IAAAA,GAAG,EAAE,GAAP;AAAYC,IAAAA,IAAI,EAAE,OAAlB;AAA2BC,IAAAA,KAAK,EAAE;AAAlC,GAHoB,CAAtB;AAOA,QAAMC,eAAe,GAAG,CACpB;AAACH,IAAAA,GAAG,EAAC,IAAL;AAAWC,IAAAA,IAAI,EAAC,aAAhB;AAA8BC,IAAAA,KAAK,EAAC;AAApC,GADoB,EAEpB;AAACF,IAAAA,GAAG,EAAC,IAAL;AAAWC,IAAAA,IAAI,EAAC,qBAAhB;AAAsCC,IAAAA,KAAK,EAAC;AAA5C,GAFoB,EAGpB;AAACF,IAAAA,GAAG,EAAC,MAAL;AAAaC,IAAAA,IAAI,EAAC,sCAAlB;AAAyDC,IAAAA,KAAK,EAAC;AAA/D,GAHoB,EAIpB;AAACF,IAAAA,GAAG,EAAC,KAAL;AAAYC,IAAAA,IAAI,EAAC,iDAAjB;AAAmEC,IAAAA,KAAK,EAAC;AAAzE,GAJoB,EAKpB;AAACF,IAAAA,GAAG,EAAC,KAAL;AAAYC,IAAAA,IAAI,EAAC,4BAAjB;AAA8CC,IAAAA,KAAK,EAAC;AAApD,GALoB,EAMpB;AAACF,IAAAA,GAAG,EAAC,KAAL;AAAYC,IAAAA,IAAI,EAAC,qDAAjB;AAAuEC,IAAAA,KAAK,EAAC;AAA7E,GANoB,EAOpB;AAACF,IAAAA,GAAG,EAAC,IAAL;AAAWC,IAAAA,IAAI,EAAC,uBAAhB;AAAwCC,IAAAA,KAAK,EAAC;AAA9C,GAPoB,EAQpB;AAACF,IAAAA,GAAG,EAAC,KAAL;AAAYC,IAAAA,IAAI,EAAC,6BAAjB;AAA+CC,IAAAA,KAAK,EAAC;AAArD,GARoB,CAAxB;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAErB,MAAM,CAAC,cAAD,CAAtB;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,QAAQ,EAAE,KADZ;AAEE,QAAA,IAAI,EAAEI,IAFR;AAGE,QAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,KAAD,CAHxB;AAIE,QAAA,MAAM,EAAE,MAAMA,OAAO,CAAC,IAAD,CAJvB;AAAA,gCAME,QAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,QAAC,KAAD,CAAO,OAAP;AAAA,iCACE,QAAC,KAAD,CAAO,WAAP;AAAA,sBAAoBE;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF,eAUE,QAAC,KAAD,CAAO,OAAP;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAMF,OAAO,CAAC,KAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAeE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAEL,MAAM,CAAC,SAAD,CAAzB;AAAsC,QAAA,EAAE,EAAC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,eAkBE,QAAC,IAAD;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,MAAM,EAAC,OAAnB;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AACE,YAAA,OAAO,EAAEJ,IAAI,CAAC2B,KADhB;AAEE,YAAA,KAAK,EAAC,YAFR;AAGE,YAAA,IAAI,EAAC,YAHP;AAIE,YAAA,QAAQ,MAJV;AAKE,YAAA,QAAQ,EAAGC,CAAD,IAAO;AACftB,cAAAA,cAAc,CACZ,sBADY,EAEZ,YAFY,EAGZsB,CAAC,CAACC,MAAF,CAASJ,KAHG,CAAd;AAKD,aAXH;AAYE,YAAA,KAAK,EAAElB,IAAI,CAAC,MAAD;AAZb;AAAA;AAAA;AAAA;AAAA,kBADF,eAeE,QAAC,IAAD,CAAM,KAAN;AACE,YAAA,OAAO,EAAEP,IAAI,CAAC2B,KADhB;AAEE,YAAA,KAAK,EAAC,aAFR;AAGE,YAAA,IAAI,EAAC,aAHP;AAIE,YAAA,QAAQ,MAJV;AAKE,YAAA,QAAQ,EAAGC,CAAD,IAAO;AACftB,cAAAA,cAAc,CACZ,sBADY,EAEZ,aAFY,EAGZsB,CAAC,CAACC,MAAF,CAASJ,KAHG,CAAd;AAKD,aAXH;AAYE,YAAA,KAAK,EAAElB,IAAI,CAAC,MAAD;AAZb;AAAA;AAAA;AAAA;AAAA,kBAfF,eA6BE,QAAC,IAAD,CAAM,KAAN;AACE,YAAA,OAAO,EAAEP,IAAI,CAAC2B,KADhB;AAEE,YAAA,KAAK,EAAC,WAFR;AAGE,YAAA,IAAI,EAAC,WAHP;AAIE,YAAA,QAAQ,MAJV;AAKE,YAAA,QAAQ,EAAGC,CAAD,IAAO;AACftB,cAAAA,cAAc,CACZ,sBADY,EAEZ,WAFY,EAGZsB,CAAC,CAACC,MAAF,CAASJ,KAHG,CAAd;AAKD,aAXH;AAYE,YAAA,KAAK,EAAElB,IAAI,CAAC,MAAD;AAZb;AAAA;AAAA;AAAA;AAAA,kBA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eA6CE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,MAAM,EAAC,OAAnB;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AACC,YAAA,QAAQ,MADT;AAEE,YAAA,OAAO,EAAEJ,MAFX;AAGE,YAAA,OAAO,EAAEmB,aAHX;AAIE,YAAA,KAAK,EAAE;AACLQ,cAAAA,QAAQ,EAAE,cADL;AAELC,cAAAA,OAAO,EAAE;AAFJ,aAJT;AAQE,YAAA,WAAW,EAAC,QARd;AASE,YAAA,QAAQ,EAAE,CAACH,CAAD,EAAI;AAAEH,cAAAA;AAAF,aAAJ,KAAkB;AAC1BnB,cAAAA,cAAc,CAAC,sBAAD,EAAyB,KAAzB,EAAgCmB,KAAhC,CAAd;AACD,aAXH;AAYE,YAAA,WAAW,EAAE;AAAEO,cAAAA,EAAE,EAAE;AAAN;AAZf;AAAA;AAAA;AAAA;AAAA,kBADF,eAeC,QAAC,IAAD,CAAM,KAAN;AACA,YAAA,QAAQ,MADR;AAEG,YAAA,OAAO,EAAE7B,MAFZ;AAGG,YAAA,OAAO,EAAEuB,eAHZ;AAIG,YAAA,KAAK,EAAE;AACLI,cAAAA,QAAQ,EAAE,UADL;AAELC,cAAAA,OAAO,EAAE;AAFJ,aAJV;AAQG,YAAA,WAAW,EAAC,UARf;AASG,YAAA,QAAQ,EAAE,CAACH,CAAD,EAAI;AAAEH,cAAAA;AAAF,aAAJ,KAAkB;AAC1BnB,cAAAA,cAAc,CAAC,sBAAD,EAAyB,UAAzB,EAAqCmB,KAArC,CAAd;AACD,aAXJ;AAYG,YAAA,WAAW,EAAE;AAAEO,cAAAA,EAAE,EAAE;AAAN;AAZhB;AAAA;AAAA;AAAA;AAAA,kBAfD;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7CF,eA4EE;AAAK,UAAA,SAAS,EAAE5B,MAAM,CAAC,aAAD,CAAtB;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,KADP;AAEE,YAAA,OAAO,EAAC,yBAFV;AAGE,YAAA,OAAO,EAAE,MAAM;AACbS,cAAAA,cAAc,CAACN,IAAD,CAAd;AACD,aALH;AAME,YAAA,KAAK,EAAC;AANR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA5EF;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8GD;;GA/JuBF,O;;KAAAA,O","sourcesContent":["import React from \"react\";\nimport { Header, Form, Button, Modal, Select } from \"semantic-ui-react\";\nimport styles from \"./Personal.module.css\";\n\nexport default function General({ handleFormFill, form }) {\n  const [open, setOpen] = React.useState(false);\n  const [modalMessage, setModalMessgae] = React.useState(\"\");\n\n  function validateInputs(form) {\n    console.log(form);\n\n    let validated = true;\n    let errorMessgae = \"\";\n    let fields = [\"name\", \"present_department\", \"designation\", \"employee_id\"];\n\n    fields.forEach((field) => {\n      if (form[field] === \"\" || form[field] === undefined) {\n        validated = false;\n        errorMessgae = `Invalid Input field: ${field}`;\n      }\n    });\n\n    if (form[\"photo\"] === null) {\n      validated = false;\n      errorMessgae = `Please upload a proper photograph`;\n    }\n\n    if (!validated) {\n      setModalMessgae(errorMessgae);\n      setOpen(true);\n    }\n\n    return true;\n  }\n\n  const genderOptions = [\n    { key: \"m\", text: \"Male\", value: \"male\" },\n    { key: \"f\", text: \"Female\", value: \"female\" },\n    { key: \"o\", text: \"Other\", value: \"other\" },\n  ];\n\n\n  const categoryOptions = [\n      {key:\"om\" ,text:\"OPEN MERIT \",value:\"om\"},\n      {key:\"sc\" ,text:\"SC\tSCHEDULED CASTES\",value:\"sc\"},\n      {key:\"stgp\" ,text:\"SCHEDULED TRIBE, GUJJAR AND BAKERWAL\",value:\"stgp\"},\n      {key:\"osc\" ,text:\"WEAK AND UNDER PRIVILEGED CLASSES/SOCIAL CASTES\",value:\"osc\"},\n      {key:\"rba\" ,text:\"RESIDENTS OF BACKWARD AREA\",value:\"rba\"},\n      {key:\"alc\" ,text:\"RESIDENTS OF AREA ADJOINING ACTUAL LINE OF CONTROL \",value:\"alc\"},\n      {key:\"sp\" ,text:\"PROFICIENCY IN SPORTS\",value:\"sp\"},\n      {key:\"ews\" ,text:\"ECONOMICALLY WEAKER SECTION\",value:\"ews\"},\n  ]\n\n  return (\n    <div className=\"container\">\n      <div className={styles[\"main_wrapper\"]}>\n        <Modal\n          centered={false}\n          open={open}\n          onClose={() => setOpen(false)}\n          onOpen={() => setOpen(true)}\n        >\n          <Modal.Header>Please Note</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>{modalMessage}</Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => setOpen(false)}>OK</Button>\n          </Modal.Actions>\n        </Modal>\n        <Header className={styles[\"heading\"]} as=\"h2\">\n          2. Personal Information\n        </Header>\n        <Form>\n          <Form.Group widths=\"equal\">\n            <Form.Field\n              control={Form.Input}\n              label=\"First Name\"\n              name=\"first_name\"\n              required\n              onChange={(e) => {\n                handleFormFill(\n                  \"personal_information\",\n                  \"first_name\",\n                  e.target.value\n                );\n              }}\n              value={form[\"name\"]}\n            />\n            <Form.Field\n              control={Form.Input}\n              label=\"Middle Name\"\n              name=\"middle_name\"\n              required\n              onChange={(e) => {\n                handleFormFill(\n                  \"personal_information\",\n                  \"middle_name\",\n                  e.target.value\n                );\n              }}\n              value={form[\"name\"]}\n            />\n            <Form.Field\n              control={Form.Input}\n              label=\"Last Name\"\n              name=\"last_name\"\n              required\n              onChange={(e) => {\n                handleFormFill(\n                  \"personal_information\",\n                  \"last_name\",\n                  e.target.value\n                );\n              }}\n              value={form[\"name\"]}\n            />\n          </Form.Group>\n          <Form.Group widths=\"equal\">\n            <Form.Field\n             required\n              control={Select}\n              options={genderOptions}\n              label={{\n                children: \"Gender / Sex\",\n                htmlFor: \"form-select-control-gender\",\n              }}\n              placeholder=\"Gender\"\n              onChange={(e, { value }) => {\n                handleFormFill(\"personal_information\", \"sex\", value);\n              }}\n              searchInput={{ id: \"form-select-control-gender\" }}\n            />\n           <Form.Field\n           required\n              control={Select}\n              options={categoryOptions}\n              label={{\n                children: \"Category\",\n                htmlFor: \"form-select-control-category\",\n              }}\n              placeholder=\"Category\"\n              onChange={(e, { value }) => {\n                handleFormFill(\"personal_information\", \"category\", value);\n              }}\n              searchInput={{ id: \"form-select-control-gender\" }}\n            />\n          </Form.Group>\n\n          <div className={styles[\"btn_wrapper\"]}>\n            <Button\n              size=\"big\"\n              content=\"NEXT : Personal Details\"\n              onClick={() => {\n                validateInputs(form);\n              }}\n              color=\"green\"\n            />\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}