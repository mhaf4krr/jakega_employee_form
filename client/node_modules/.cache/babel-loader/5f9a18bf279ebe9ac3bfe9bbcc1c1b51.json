{"ast":null,"code":"var _jsxFileName = \"/home/hyder/Desktop/JAKEGA_FORM/client/src/components/General_Info/General.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Header, Form, Image, Button, Modal } from \"semantic-ui-react\";\nimport styles from \"./General.module.css\";\nimport default_img from \"../../assets/image.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function General({\n  handleFormFill,\n  form,\n  incrementStep\n}) {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [modalMessage, setModalMessgae] = React.useState(\"\");\n\n  function validateInputs(form) {\n    console.log(form);\n    let validated = true;\n    let errorMessgae = \"\";\n    let fields = [\"name\", \"present_department\", \"designation\", \"employee_id\"];\n    fields.forEach(field => {\n      if (form[field] === \"\" || form[field] === undefined) {\n        validated = false;\n        errorMessgae = `Invalid Input field: ${field}`;\n      }\n    });\n\n    if (form[\"photo\"] === null) {\n      validated = false;\n      errorMessgae = `Please upload a proper photograph`;\n    }\n\n    if (!validated) {\n      setModalMessgae(errorMessgae);\n      setOpen(true);\n      return false;\n    }\n\n    return true;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"main_wrapper\"],\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        centered: false,\n        open: open,\n        onClose: () => setOpen(false),\n        onOpen: () => setOpen(true),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: \"Please Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n          children: /*#__PURE__*/_jsxDEV(Modal.Description, {\n            children: modalMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setOpen(false),\n            children: \"OK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        className: styles[\"heading\"],\n        as: \"h2\",\n        children: \"General Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          widths: \"equal\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Form.Input,\n            label: \"Name\",\n            name: \"name\",\n            required: true,\n            onChange: e => {\n              handleFormFill(\"general_information\", \"name\", e.target.value);\n            },\n            value: form[\"name\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Form.Input,\n            label: \"Present Department\",\n            name: \"present_department\",\n            required: true,\n            onChange: e => {\n              handleFormFill(\"general_information\", \"present_department\", e.target.value);\n            },\n            value: form[\"present_department\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          widths: \"equal\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Form.Input,\n            label: \"Designation\",\n            name: \"designation\",\n            required: true,\n            onChange: e => {\n              handleFormFill(\"general_information\", \"designation\", e.target.value);\n            },\n            value: form[\"designation\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Form.Input,\n            label: \"Employee ID\",\n            name: \"employee_id\",\n            required: true,\n            onChange: e => {\n              handleFormFill(\"general_information\", \"employee_id\", e.target.value);\n            },\n            value: form[\"employee_id\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"photo_upload_section\"],\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n                required: true,\n                type: \"file\",\n                accept: \".jpg,jpeg,.png\",\n                label: \"Uplaod Photograph\",\n                onChange: e => {\n                  let file_type = e.target.files[0].type;\n\n                  if (!file_type.includes(\"image\")) {\n                    e.target.value = \"\";\n                    return;\n                  }\n\n                  handleFormFill(\"general_information\", \"photo\", e.target.files[0]);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Affix signed Passport size (5cm x 7cm) recent Photograph\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Image, {\n                src: form[\"photo\"] === null ? default_img : window.URL.createObjectURL(form[\"photo\"]),\n                size: \"medium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Selected Photograph\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"btn_wrapper\"],\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"big\",\n            content: \"NEXT : Personal Details\",\n            onClick: () => {\n              if (validateInputs(form)) {\n                incrementStep();\n              }\n            },\n            color: \"green\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(General, \"wy+5Xx1a/Pk505tdfQK2pY79bYo=\");\n\n_c = General;\n\nvar _c;\n\n$RefreshReg$(_c, \"General\");","map":{"version":3,"sources":["/home/hyder/Desktop/JAKEGA_FORM/client/src/components/General_Info/General.js"],"names":["React","Header","Form","Image","Button","Modal","styles","default_img","General","handleFormFill","form","incrementStep","open","setOpen","useState","modalMessage","setModalMessgae","validateInputs","console","log","validated","errorMessgae","fields","forEach","field","undefined","Input","e","target","value","file_type","files","type","includes","window","URL","createObjectURL"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Header, Form, Image, Button, Modal } from \"semantic-ui-react\";\nimport styles from \"./General.module.css\";\n\nimport default_img from \"../../assets/image.png\";\n\nexport default function General({ handleFormFill, form ,incrementStep}) {\n  const [open, setOpen] = React.useState(false);\n  const [modalMessage, setModalMessgae] = React.useState(\"\");\n\n  function validateInputs(form) {\n    console.log(form);\n\n\n    let validated = true;\n    let errorMessgae = \"\";\n    let fields = [\"name\", \"present_department\", \"designation\", \"employee_id\"];\n\n    fields.forEach((field) => {\n      if (\n        form[field] === \"\" ||\n        form[field] === undefined\n      ) {\n        validated = false;\n        errorMessgae = `Invalid Input field: ${field}`;\n       \n      }\n    });\n\n    if (form[\"photo\"] === null) {\n      validated = false;\n      errorMessgae = `Please upload a proper photograph`;\n    }\n\n    if (!validated) {\n      setModalMessgae(errorMessgae);\n      setOpen(true);\n      return false\n    }\n\n    return true;\n  }\n  return (\n    <div className=\"container\">\n      <div className={styles[\"main_wrapper\"]}>\n        <Modal\n          centered={false}\n          open={open}\n          onClose={() => setOpen(false)}\n          onOpen={() => setOpen(true)}\n        >\n          <Modal.Header>Please Note</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>{modalMessage}</Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => setOpen(false)}>OK</Button>\n          </Modal.Actions>\n        </Modal>\n        <Header className={styles[\"heading\"]} as=\"h2\">\n          General Information\n        </Header>\n        <Form>\n          <Form.Group widths=\"equal\">\n            <Form.Field\n              control={Form.Input}\n              label=\"Name\"\n              name=\"name\"\n              required\n              onChange={(e) => {\n                handleFormFill(\"general_information\", \"name\", e.target.value);\n              }}\n              value={form[\"name\"]}\n            />\n            <Form.Field\n              control={Form.Input}\n              label=\"Present Department\"\n              name=\"present_department\"\n              required\n              onChange={(e) => {\n                handleFormFill(\n                  \"general_information\",\n                  \"present_department\",\n                  e.target.value\n                );\n              }}\n              value={form[\"present_department\"]}\n            />\n          </Form.Group>\n          <Form.Group widths=\"equal\">\n            <Form.Field\n              control={Form.Input}\n              label=\"Designation\"\n              name=\"designation\"\n              required\n              onChange={(e) => {\n                handleFormFill(\n                  \"general_information\",\n                  \"designation\",\n                  e.target.value\n                );\n              }}\n              value={form[\"designation\"]}\n            />\n            <Form.Field\n              control={Form.Input}\n              label=\"Employee ID\"\n              name=\"employee_id\"\n              required\n              onChange={(e) => {\n                handleFormFill(\n                  \"general_information\",\n                  \"employee_id\",\n                  e.target.value\n                );\n              }}\n              value={form[\"employee_id\"]}\n            />\n          </Form.Group>\n\n          <Form.Group>\n            <div className={styles[\"photo_upload_section\"]}>\n              <div>\n                <Form.Input\n                  required\n                  type=\"file\"\n                  accept=\".jpg,jpeg,.png\"\n                  label=\"Uplaod Photograph\"\n                  onChange={(e) => {\n                    let file_type = e.target.files[0].type;\n\n                    if (!file_type.includes(\"image\")) {\n                      e.target.value = \"\";\n                      return;\n                    }\n\n                    handleFormFill(\n                      \"general_information\",\n                      \"photo\",\n                      e.target.files[0]\n                    );\n                  }}\n                />\n\n                <p>Affix signed Passport size (5cm x 7cm) recent Photograph</p>\n              </div>\n\n              <div>\n                <Image\n                  src={\n                    form[\"photo\"] === null\n                      ? default_img\n                      : window.URL.createObjectURL(form[\"photo\"])\n                  }\n                  size=\"medium\"\n                />\n                <p>Selected Photograph</p>\n              </div>\n            </div>\n          </Form.Group>\n\n          <div className={styles[\"btn_wrapper\"]}>\n            <Button\n              size=\"big\"\n              content=\"NEXT : Personal Details\"\n              onClick={() => {\n                if(validateInputs(form)){\n                  incrementStep()\n                }\n              }}\n              color=\"green\"\n            />\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}