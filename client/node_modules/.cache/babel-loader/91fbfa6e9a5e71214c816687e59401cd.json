{"ast":null,"code":"var _jsxFileName = \"/home/hyder/Desktop/jakega_employee_form/client/src/components/ServiceInformation/PromotionsInfo/PromotionsInformation.js\";\nimport React, { Component } from \"react\";\nimport styles from \"./Promotions.module.css\";\nimport Modal from \"../../../utils/Modal/Modal\";\nimport { Header, Form, Button } from \"semantic-ui-react\";\nimport Table from \"./PromotionsTable/Table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class PromotionsInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modalOpen: false,\n      counter: 0,\n      promotions: [],\n      promotion: {\n        office_place: \"\",\n        from: \"\",\n        to: \"\"\n      }\n    };\n\n    this.validatedMainSubmission = () => {\n      let promotions_data = this.state.promotions;\n\n      if (promotions_data.length > 0) {\n        return true;\n      } else return false;\n    };\n\n    this.validated = () => {\n      let validated = true;\n      let promotions_data = this.state.promotions;\n      let fields = Object.keys(promotions_data);\n\n      for (let i = 0; i < fields.length; i++) {\n        if (promotions_data[fields[i]] === \"\") {\n          validated = false;\n          break;\n        }\n      }\n\n      return validated;\n    };\n\n    this.clearExistingForm = () => {\n      let current_promotion_form = { ...this.state.promotion\n      };\n      let fields = Object.keys(current_promotion_form);\n      fields.forEach(field => {\n        current_promotion_form[field] = \"\";\n      });\n      this.setState({\n        promotion: current_promotion_form\n      });\n    };\n\n    this.storeCurrentInArray = () => {\n      let counter = this.state.counter;\n      let current_promotion_form = { ...this.state.promotion,\n        id: counter\n      };\n      console.log(current_promotion_form, \"current_ed_form\");\n      let promotions_data = [...this.state.promotions, current_promotion_form];\n      this.setState({\n        promotions: promotions_data,\n        counter: counter + 1,\n        modalOpen: false\n      });\n    };\n\n    this.removeItemFormTable = value => {\n      let promotions_data = [...this.state.promotions];\n      promotions_data = promotions_data.filter(item => {\n        console.log(item[\"id\"], value);\n        return item[\"id\"] !== value;\n      });\n      this.setState({\n        promotions: promotions_data\n      });\n    };\n\n    this.handleFormFill = (id, value) => {\n      let promotion_data = { ...this.state.promotion\n      };\n      promotion_data[id] = value;\n      this.setState({\n        promotion: promotion_data\n      });\n    };\n\n    this.changeModal = state => {\n      let modal = state === \"open\" ? true : false;\n      this.setState({\n        modalOpen: modal\n      });\n    };\n  }\n\n  componentDidMount() {\n    let main_form_promotion_data = [...this.props.form]; // If some previous information exists, just initialize state to that\n\n    if (main_form_promotion_data.length > 0) {\n      this.setState({\n        promotions: [...main_form_promotion_data]\n      });\n    }\n\n    return;\n  }\n\n  render() {\n    let {\n      incrementStep,\n      decrementStep,\n      handleArrayFill\n    } = { ...this.props\n    };\n    let form = this.state.promotion;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"main_wrapper\"],\n        children: [/*#__PURE__*/_jsxDEV(Modal, {\n          modalState: this.state.modalOpen,\n          modalMessage: \"Add new promotion Detail\",\n          closeModal: () => this.changeModal(\"close\"),\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              widths: \"equal\",\n              children: /*#__PURE__*/_jsxDEV(Form.Field, {\n                control: Form.Input,\n                label: \"Office and Place\",\n                name: \"office_and_place\",\n                required: true,\n                onChange: e => {\n                  this.handleFormFill(\"office_place\", e.target.value);\n                },\n                value: form[\"office_place\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              widths: \"equal\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n                control: Form.Input,\n                label: \"promotion From\",\n                name: \"from\",\n                required: true,\n                onChange: e => {\n                  this.handleFormFill(\"from\", e.target.value);\n                },\n                value: form[\"from\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                control: Form.Input,\n                label: \"promotion To\",\n                name: \"to\",\n                required: true,\n                onChange: e => {\n                  this.handleFormFill(\"to\", e.target.value);\n                },\n                value: form[\"to\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                positive: true,\n                onClick: e => {\n                  if (this.validated()) {\n                    this.storeCurrentInArray();\n                    this.clearExistingForm();\n                  }\n                },\n                children: \"Add Detail to List\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Header, {\n          as: \"h2\",\n          children: \"11. Official promotions Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please fill up the details of your promotion from the date of appointment (applicable for reverification cases)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          positive: true,\n          onClick: e => {\n            this.setState({\n              modalOpen: true\n            });\n          },\n          children: \"Add promotion Detail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        removeItemFormTable: this.removeItemFormTable,\n        data: this.state.promotions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"btn_wrapper\"],\n        children: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"medium\",\n            color: \"yellow\",\n            onClick: e => {\n              e.preventDefault();\n              decrementStep();\n            },\n            children: \"BACK: (11). POSTING INFO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button.Or, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"medium\",\n            positive: true,\n            disabled: !this.validatedMainSubmission(),\n            onClick: e => {\n              e.preventDefault();\n\n              if (this.validatedMainSubmission()) {\n                handleArrayFill(\"service_details\", [...this.state.promotions], \"promotions\");\n                incrementStep();\n              } else return false;\n            },\n            children: \"(13). JOINING INFO : NEXT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/hyder/Desktop/jakega_employee_form/client/src/components/ServiceInformation/PromotionsInfo/PromotionsInformation.js"],"names":["React","Component","styles","Modal","Header","Form","Button","Table","PromotionsInfo","state","modalOpen","counter","promotions","promotion","office_place","from","to","validatedMainSubmission","promotions_data","length","validated","fields","Object","keys","i","clearExistingForm","current_promotion_form","forEach","field","setState","storeCurrentInArray","id","console","log","removeItemFormTable","value","filter","item","handleFormFill","promotion_data","changeModal","modal","componentDidMount","main_form_promotion_data","props","form","render","incrementStep","decrementStep","handleArrayFill","Input","e","target","preventDefault"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport styles from \"./Promotions.module.css\";\n\nimport Modal from \"../../../utils/Modal/Modal\";\n\nimport { Header, Form, Button } from \"semantic-ui-react\";\n\nimport Table from \"./PromotionsTable/Table\";\n\nexport default class PromotionsInfo extends Component {\n  state = {\n    modalOpen: false,\n    counter: 0,\n    promotions: [],\n    promotion: {\n      office_place: \"\",\n      from: \"\",\n      to: \"\",\n    },\n  };\n\n  componentDidMount() {\n    let main_form_promotion_data = [...this.props.form];\n    // If some previous information exists, just initialize state to that\n\n    if (main_form_promotion_data.length > 0) {\n      this.setState({ promotions: [...main_form_promotion_data] });\n    }\n\n    return;\n  }\n\n  validatedMainSubmission = () => {\n    let promotions_data = this.state.promotions;\n    if (promotions_data.length > 0) {\n      return true;\n    } else return false;\n  };\n\n  validated = () => {\n    let validated = true;\n\n    let promotions_data = this.state.promotions;\n\n    let fields = Object.keys(promotions_data);\n\n    for (let i = 0; i < fields.length; i++) {\n      if (promotions_data[fields[i]] === \"\") {\n        validated = false;\n        break;\n      }\n    }\n\n    return validated;\n  };\n\n  clearExistingForm = () => {\n    let current_promotion_form = { ...this.state.promotion };\n    let fields = Object.keys(current_promotion_form);\n    fields.forEach((field) => {\n      current_promotion_form[field] = \"\";\n    });\n    this.setState({\n      promotion: current_promotion_form,\n    });\n  };\n\n  storeCurrentInArray = () => {\n    let counter = this.state.counter;\n    let current_promotion_form = { ...this.state.promotion, id: counter };\n    console.log(current_promotion_form, \"current_ed_form\");\n\n    let promotions_data = [...this.state.promotions, current_promotion_form];\n\n    this.setState({\n      promotions: promotions_data,\n      counter: counter + 1,\n      modalOpen: false,\n    });\n  };\n\n  removeItemFormTable = (value) => {\n    let promotions_data = [...this.state.promotions];\n    promotions_data = promotions_data.filter((item) => {\n      console.log(item[\"id\"], value);\n      return item[\"id\"] !== value;\n    });\n\n    this.setState({\n      promotions: promotions_data,\n    });\n  };\n\n  handleFormFill = (id, value) => {\n    let promotion_data = { ...this.state.promotion };\n    promotion_data[id] = value;\n\n    this.setState({ promotion: promotion_data });\n  };\n\n  changeModal = (state) => {\n    let modal = state === \"open\" ? true : false;\n    this.setState({ modalOpen: modal });\n  };\n  render() {\n    let { incrementStep, decrementStep, handleArrayFill } = {\n      ...this.props,\n    };\n\n    let form = this.state.promotion;\n\n    return (\n      <div className=\"container\">\n        <div className={styles[\"main_wrapper\"]}>\n          <Modal\n            modalState={this.state.modalOpen}\n            modalMessage=\"Add new promotion Detail\"\n            closeModal={() => this.changeModal(\"close\")}\n          >\n            <Form>\n              <Form.Group widths=\"equal\">\n                <Form.Field\n                  control={Form.Input}\n                  label=\"Office and Place\"\n                  name=\"office_and_place\"\n                  required\n                  onChange={(e) => {\n                    this.handleFormFill(\"office_place\", e.target.value);\n                  }}\n                  value={form[\"office_place\"]}\n                />\n              </Form.Group>\n\n              <Form.Group widths=\"equal\">\n                <Form.Field\n                  control={Form.Input}\n                  label=\"promotion From\"\n                  name=\"from\"\n                  required\n                  onChange={(e) => {\n                    this.handleFormFill(\"from\", e.target.value);\n                  }}\n                  value={form[\"from\"]}\n                />\n\n                <Form.Field\n                  control={Form.Input}\n                  label=\"promotion To\"\n                  name=\"to\"\n                  required\n                  onChange={(e) => {\n                    this.handleFormFill(\"to\", e.target.value);\n                  }}\n                  value={form[\"to\"]}\n                />\n              </Form.Group>\n\n              <Form.Group>\n                <Button\n                  positive\n                  onClick={(e) => {\n                    if (this.validated()) {\n                      this.storeCurrentInArray();\n                      this.clearExistingForm();\n                    }\n                  }}\n                >\n                  Add Detail to List\n                </Button>\n              </Form.Group>\n            </Form>\n          </Modal>\n\n          <Header as=\"h2\">11. Official promotions Information</Header>\n          <p>\n            Please fill up the details of your promotion from the date of\n            appointment (applicable for reverification cases)\n          </p>\n\n          <Button\n            positive\n            onClick={(e) => {\n              this.setState({\n                modalOpen: true,\n              });\n            }}\n          >\n            Add promotion Detail\n          </Button>\n        </div>\n        <Table\n          removeItemFormTable={this.removeItemFormTable}\n          data={this.state.promotions}\n        />\n\n        <div className={styles[\"btn_wrapper\"]}>\n          <Button.Group>\n            <Button\n              size=\"medium\"\n              color=\"yellow\"\n              onClick={(e) => {\n                e.preventDefault();\n                decrementStep();\n              }}\n            >\n              BACK: (11). POSTING INFO\n            </Button>\n            <Button.Or />\n            <Button\n              size=\"medium\"\n              positive\n              disabled={!this.validatedMainSubmission()}\n              onClick={(e) => {\n                e.preventDefault();\n\n                if (this.validatedMainSubmission()) {\n                  handleArrayFill(\n                    \"service_details\",\n                    [...this.state.promotions],\n                    \"promotions\"\n                  );\n                  incrementStep();\n                } else return false;\n              }}\n            >\n              (13). JOINING INFO : NEXT\n            </Button>\n          </Button.Group>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}