{"ast":null,"code":"var _jsxFileName = \"/home/hyder/Desktop/Form_Project/client/src/components/Particulars/ChildrenAbroad/ChildrenAbroad.js\";\nimport React, { Component } from \"react\";\nimport styles from \"./Educational.module.css\";\nimport Modal from \"../../../utils/Modal/Modal\";\nimport { Header, Form, Button, TextArea, Select } from \"semantic-ui-react\";\nimport Table from \"./ChildrenTable/Table\";\nimport { countries } from \"../../../utils/NationalityData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ChildrenAbroad extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modalOpen: false,\n      counter: 0,\n      nri_children: [],\n      current_nri_child: {\n        relation: null,\n        name: \"\",\n        occupation: \"\",\n        country: null,\n        details_of_employer_university: \"\",\n        present_address: \"\"\n      }\n    };\n\n    this.handleLocalFormFill = (key, value) => {\n      let form = { ...this.state.current_nri_child\n      };\n\n      if (value === null) {\n        return;\n      }\n\n      form[key] = value;\n      this.setState({\n        current_nri_child: { ...form\n        }\n      });\n    };\n\n    this.validatedMainSubmission = () => {\n      let nri_children = this.state.nri_children;\n\n      if (nri_children.length > 0) {\n        return true;\n      } else return false;\n    };\n\n    this.removeItemFormTable = counter => {\n      let nri_children_data = [...this.state.nri_children];\n      nri_children_data = nri_children_data.filter(member => {\n        return member.counter !== counter;\n      });\n      this.setState({\n        nri_children: [...nri_children_data]\n      });\n    };\n\n    this.validated = () => {\n      let form = this.state.current_nri_child;\n      let validated = true;\n      let fields = [\"occupation\", \"name\", \"details_of_employer_university\", \"present_address\", \"relation\"];\n\n      for (let i = 0; i < fields.length; i++) {\n        if (form[fields[i]] === \"\" || form[fields[i]] === null) {\n          validated = false;\n          break;\n        }\n      }\n\n      return validated;\n    };\n\n    this.storeCurrentIntoArray = () => {\n      let temp = this.state.counter + 1;\n      let current = { ...this.state.current_nri_child,\n        counter: this.state.counter\n      };\n      this.setState({\n        nri_children: [...this.state.nri_children, current],\n        counter: temp\n      });\n    };\n\n    this.clearExistingForm = () => {\n      let current_data = this.state.current_nri_child;\n      let fields = Object.keys(current_data);\n\n      for (let i = 0; i < fields.length; i++) {\n        current_data[fields[i]] = \"\";\n      }\n\n      current_data[\"relation\"] = null;\n      this.setState({\n        current_nri_child: { ...current_data\n        }\n      });\n    };\n\n    this.changeModal = state => {\n      let modal = state === \"open\" ? true : false;\n      this.setState({\n        modalOpen: modal\n      });\n    };\n  }\n\n  componentDidMount() {\n    let nri_children_data = this.props.form; // If some previous information exists, just initialize state to that\n\n    if (nri_children_data.length > 0) {\n      this.setState({\n        nri_children: [...nri_children_data]\n      });\n    }\n\n    return;\n  }\n\n  render() {\n    let {\n      incrementStep,\n      decrementStep,\n      handleArrayFill\n    } = { ...this.props\n    };\n    let form = this.state.current_nri_child;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"main_wrapper\"],\n        children: [/*#__PURE__*/_jsxDEV(Modal, {\n          modalState: this.state.modalOpen,\n          modalMessage: \"Add a Family Member NRI\",\n          closeModal: () => this.changeModal(\"close\"),\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              widths: \"equal\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n                required: true,\n                control: Select,\n                options: [\"Son\", \"Daughter\", \"Step Son\", \"Step Daughter\"].map(relation => {\n                  return {\n                    key: relation,\n                    text: relation,\n                    value: relation\n                  };\n                }),\n                label: {\n                  children: \"Relation\",\n                  htmlFor: \"form-select-control-relation\"\n                },\n                placeholder: form[\"relation\"] || \"Relation\",\n                search: true,\n                onChange: (e, {\n                  value\n                }) => {\n                  console.log(value);\n                  this.handleLocalFormFill(\"relation\", value);\n                },\n                searchInput: {\n                  id: \"form-select-control-relation\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                required: true,\n                control: Select,\n                options: countries.map(country => {\n                  return {\n                    key: country.name,\n                    text: country.name,\n                    value: country.name\n                  };\n                }),\n                label: {\n                  children: \"Country\",\n                  htmlFor: \"form-select-control-country\"\n                },\n                placeholder: form[\"country\"] || \"Country\",\n                search: true,\n                onChange: (e, {\n                  value\n                }) => {\n                  console.log(value);\n                  this.handleLocalFormFill(\"country\", value);\n                },\n                searchInput: {\n                  id: \"form-select-control-country\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                control: Form.Input,\n                label: \"Name\",\n                name: \"name\",\n                required: true,\n                onChange: e => {\n                  this.handleLocalFormFill(\"name\", e.target.value);\n                },\n                value: form[\"name\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                control: Form.Input,\n                label: \"Occupation\",\n                name: \"occupation\",\n                required: true,\n                onChange: e => {\n                  this.handleLocalFormFill(\"occupation\", e.target.value);\n                },\n                value: form[\"occupation\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              label: \"Present Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(TextArea, {\n                required: true,\n                placeholer: \"Address\",\n                onChange: e => {\n                  this.handleLocalFormFill(\"present_address\", e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              label: \"Employer Details or Course and Instition Details (if pursuing education)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(TextArea, {\n                required: true,\n                placeholer: \"details_of_employer_university\",\n                onChange: e => {\n                  this.handleLocalFormFill(\"details_of_employer_university\", e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                positive: true,\n                disabled: !this.validated(),\n                onClick: e => {\n                  e.preventDefault();\n\n                  if (this.validated()) {\n                    this.storeCurrentIntoArray();\n                    this.setState({\n                      modalOpen: false\n                    });\n                    this.clearExistingForm();\n                  }\n                },\n                children: \"Add Family Member\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Header, {\n          as: \"h2\",\n          children: \"25. Particulars of Children Abroad (STUDYING / LIVING / WORKING)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please enter the details of children STUDYING / LIVING / WORKING abroad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          positive: true,\n          onClick: e => {\n            this.setState({\n              modalOpen: true\n            });\n          },\n          children: \"Add Child Detail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        removeItemFormTable: this.removeItemFormTable,\n        data: this.state.nri_children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"btn_wrapper\"],\n        children: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"medium\",\n            color: \"yellow\",\n            onClick: e => {\n              e.preventDefault();\n              decrementStep();\n            },\n            children: \"BACK: (24). NRI FAMILY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button.Or, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"medium\",\n            positive: true,\n            onClick: e => {\n              e.preventDefault();\n\n              if (true) {\n                handleArrayFill(\"particulars_information\", [...this.state.nri_children], \"nri_family\");\n                incrementStep();\n              } else return false;\n            },\n            children: \"26 PREVIOUS EMPLOYMENT: NEXT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/hyder/Desktop/Form_Project/client/src/components/Particulars/ChildrenAbroad/ChildrenAbroad.js"],"names":["React","Component","styles","Modal","Header","Form","Button","TextArea","Select","Table","countries","ChildrenAbroad","state","modalOpen","counter","nri_children","current_nri_child","relation","name","occupation","country","details_of_employer_university","present_address","handleLocalFormFill","key","value","form","setState","validatedMainSubmission","length","removeItemFormTable","nri_children_data","filter","member","validated","fields","i","storeCurrentIntoArray","temp","current","clearExistingForm","current_data","Object","keys","changeModal","modal","componentDidMount","props","render","incrementStep","decrementStep","handleArrayFill","map","text","children","htmlFor","e","console","log","id","Input","target","preventDefault"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport styles from \"./Educational.module.css\";\n\nimport Modal from \"../../../utils/Modal/Modal\";\n\nimport { Header, Form, Button, TextArea, Select } from \"semantic-ui-react\";\n\nimport Table from \"./ChildrenTable/Table\";\n\nimport {countries} from \"../../../utils/NationalityData\"\n\nexport default class ChildrenAbroad extends Component {\n  state = {\n    modalOpen: false,\n    counter: 0,\n    nri_children: [],\n    current_nri_child: {\n      relation: null,\n      name: \"\",\n      occupation: \"\",\n      country:null,\n      details_of_employer_university:\"\",\n      present_address: \"\",\n      \n \n    },\n  };\n\n  componentDidMount() {\n    let nri_children_data = this.props.form;\n\n    // If some previous information exists, just initialize state to that\n\n    if (nri_children_data.length > 0) {\n      this.setState({ nri_children: [...nri_children_data] });\n    }\n\n    return;\n  }\n\n  handleLocalFormFill = (key, value) => {\n    let form = { ...this.state.current_nri_child };\n\n    if (value === null) {\n      return;\n    }\n\n    form[key] = value;\n    this.setState({ current_nri_child: { ...form } });\n  };\n\n  validatedMainSubmission = () => {\n    let nri_children = this.state.nri_children;\n    if (nri_children.length > 0) {\n      return true;\n    } else return false;\n  };\n\n  removeItemFormTable = (counter) => {\n    let nri_children_data = [...this.state.nri_children];\n\n    nri_children_data = nri_children_data.filter((member) => {\n      return member.counter !== counter;\n    });\n\n    this.setState({ nri_children: [...nri_children_data] });\n  };\n\n  validated = () => {\n    let form = this.state.current_nri_child;\n    let validated = true;\n    let fields = [\"occupation\", \"name\",\"details_of_employer_university\", \"present_address\", \"relation\",];\n\n    for (let i = 0; i < fields.length; i++) {\n      if (form[fields[i]] === \"\" || form[fields[i]] === null) {\n        validated = false;\n     \n        break;\n      }\n    }\n\n    return validated;\n  };\n\n  storeCurrentIntoArray = () => {\n    let temp = this.state.counter + 1;\n    let current = {\n      ...this.state.current_nri_child,\n      counter: this.state.counter,\n    };\n    this.setState({\n      nri_children: [...this.state.nri_children, current],\n      counter: temp,\n    });\n  };\n\n  clearExistingForm = () => {\n    let current_data = this.state.current_nri_child;\n    let fields = Object.keys(current_data);\n\n    for (let i = 0; i < fields.length; i++) {\n      current_data[fields[i]] = \"\";\n    }\n\n    current_data[\"relation\"] = null;\n\n    this.setState({ current_nri_child: { ...current_data } });\n  };\n\n  changeModal = (state) => {\n    let modal = state === \"open\" ? true : false;\n    this.setState({ modalOpen: modal });\n  };\n  render() {\n    let { incrementStep, decrementStep, handleArrayFill } = {\n      ...this.props,\n    };\n\n    let form = this.state.current_nri_child;\n\n    return (\n      <div className=\"container\">\n        <div className={styles[\"main_wrapper\"]}>\n          <Modal\n            modalState={this.state.modalOpen}\n            modalMessage=\"Add a Family Member NRI\"\n            closeModal={() => this.changeModal(\"close\")}\n          >\n            <Form>\n              <Form.Group widths=\"equal\">\n                <Form.Field\n                  required\n                  control={Select}\n                  options={[\n                    \n                    \"Son\",\n               \n                    \"Daughter\",\n                 \n                    \"Step Son\",\n                    \"Step Daughter\",\n\n                    \n                   \n                  ].map((relation) => {\n                    return { key: relation, text: relation, value: relation };\n                  })}\n                  label={{\n                    children: \"Relation\",\n                    htmlFor: \"form-select-control-relation\",\n                  }}\n                  placeholder={form[\"relation\"] || \"Relation\"}\n                  search\n                  onChange={(e, { value }) => {\n                    console.log(value);\n                    this.handleLocalFormFill(\"relation\", value);\n                  }}\n                  searchInput={{ id: \"form-select-control-relation\" }}\n                />\n\n<Form.Field\n                  required\n                  control={Select}\n                  options={countries.map((country) => {\n                  return { key: country.name, text: country.name, value: country.name };\n                  })}\n                  label={{\n                    children: \"Country\",\n                    htmlFor: \"form-select-control-country\",\n                  }}\n                  placeholder={form[\"country\"] || \"Country\"}\n                  search\n                  onChange={(e, { value }) => {\n                    console.log(value);\n                    this.handleLocalFormFill(\"country\", value);\n                  }}\n                  searchInput={{ id: \"form-select-control-country\" }}\n                />\n\n                <Form.Field\n                  control={Form.Input}\n                  label=\"Name\"\n                  name=\"name\"\n                  required\n                  onChange={(e) => {\n                    this.handleLocalFormFill(\"name\", e.target.value);\n                  }}\n                  value={form[\"name\"]}\n                />\n\n                <Form.Field\n                  control={Form.Input}\n                  label=\"Occupation\"\n                  name=\"occupation\"\n                  required\n                  onChange={(e) => {\n                    this.handleLocalFormFill(\"occupation\", e.target.value);\n                  }}\n                  value={form[\"occupation\"]}\n                />\n              </Form.Group>\n\n              \n\n              <Form.Field label=\"Present Address\" />\n              <Form.Group>\n                <TextArea\n                  required\n                  placeholer=\"Address\"\n                  onChange={(e) => {\n                    this.handleLocalFormFill(\"present_address\", e.target.value);\n                  }}\n                />\n\n              </Form.Group>\n\n              <Form.Field label=\"Employer Details or Course and Instition Details (if pursuing education)\" />\n              <Form.Group>\n                <TextArea\n                  required\n                  placeholer=\"details_of_employer_university\"\n                  onChange={(e) => {\n                    this.handleLocalFormFill(\"details_of_employer_university\", e.target.value);\n                  }}\n                />\n\n              </Form.Group>\n\n              <Form.Group>\n                <Button\n                  positive\n                  disabled={!this.validated()}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    if (this.validated()) {\n                      this.storeCurrentIntoArray();\n                      this.setState({ modalOpen: false });\n                      this.clearExistingForm();\n                    }\n                  }}\n                >\n                  Add Family Member\n                </Button>\n              </Form.Group>\n            </Form>\n          </Modal>\n\n          <Header as=\"h2\">25. Particulars of Children Abroad (STUDYING / LIVING / WORKING)</Header>\n          <p>Please enter the details of children STUDYING / LIVING / WORKING abroad</p>\n\n          <Button\n            positive\n            onClick={(e) => {\n              this.setState({\n                modalOpen: true,\n              });\n            }}\n          >\n            Add Child Detail\n          </Button>\n        </div>\n        <Table\n          removeItemFormTable={this.removeItemFormTable}\n          data={this.state.nri_children}\n        />\n\n        <div className={styles[\"btn_wrapper\"]}>\n          <Button.Group>\n            <Button\n              size=\"medium\"\n              color=\"yellow\"\n              onClick={(e) => {\n                e.preventDefault();\n                decrementStep();\n              }}\n            >\n              BACK: (24). NRI FAMILY\n            </Button>\n            <Button.Or />\n            <Button\n              size=\"medium\"\n              positive\n            \n              onClick={(e) => {\n                e.preventDefault();\n\n                if (true) {\n                  handleArrayFill(\n                    \"particulars_information\",\n                    [...this.state.nri_children],\n                    \"nri_family\"\n                  );\n                  incrementStep();\n                } else return false;\n              }}\n            >\n              26 PREVIOUS EMPLOYMENT: NEXT\n            </Button>\n          </Button.Group>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}